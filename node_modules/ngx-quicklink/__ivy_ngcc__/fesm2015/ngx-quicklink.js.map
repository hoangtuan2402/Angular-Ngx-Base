{"version":3,"file":"ngx-quicklink.js","sources":["../../src/prefetch-registry.service.ts","../../src/link-handler.service.ts","../../src/link.directive.ts","../../src/quicklink-strategy.service.ts","../../src/quicklink.module.ts","../../ngx-quicklink.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Router,\n  UrlTree,\n  Params,\n  UrlSegmentGroup,\n  UrlSegment,\n  PRIMARY_OUTLET\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n// Using a global registry so we can keep it populated across lazy-loaded\n// modules with different parent injectors which create instance of the registry.\nconst globalRegistry: UrlTree[] = [];\n\n@Injectable()\nexport class PrefetchRegistry {\n  private trees: UrlTree[] = globalRegistry;\n  constructor(private router: Router) {}\n\n  add(tree: UrlTree) {\n    this.trees.push(tree);\n  }\n\n  shouldPrefetch(url: string) {\n    const tree = this.router.parseUrl(url);\n    return this.trees.some(containsTree.bind(null, tree));\n  }\n}\n\nfunction containsQueryParams(container: Params, containee: Params): boolean {\n  // TODO: This does not handle array params correctly.\n  return (\n    Object.keys(containee).length <= Object.keys(container).length &&\n    Object.keys(containee).every(key => containee[key] === container[key])\n  );\n}\n\nexport function containsTree(containee: UrlTree, container: UrlTree): boolean {\n  return (\n    containsQueryParams(container.queryParams, containee.queryParams) &&\n    containsSegmentGroup(container.root, containee.root, containee.root.segments)\n  );\n}\n\nfunction containsSegmentGroup(\n  container: UrlSegmentGroup,\n  containee: UrlSegmentGroup,\n  containeePaths: UrlSegment[]\n): boolean {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!containee.hasChildren()) return true;\n\n    for (const c in containee.children) {\n      if (!container.children[c]) break;\n      if (\n        containsSegmentGroup(\n          container.children[c],\n          containee.children[c],\n          containee.children[c].segments\n        )\n      )\n        return true;\n    }\n    return false;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroup(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\n\nexport function equalPath(as: UrlSegment[], bs: UrlSegment[]): boolean {\n  if (as.length !== bs.length) return false;\n  return as.every(\n    (a, i) => a.path === bs[i].path || a.path.startsWith(':') || bs[i].path.startsWith(':')\n  );\n}\n","import { Injectable, InjectionToken, NgZone } from '@angular/core';\nimport { LinkDirective } from './link.directive';\nimport { RouterPreloader } from '@angular/router';\nimport { LinkHandlerStrategy } from './link-handler-strategy';\nimport { PrefetchRegistry } from './prefetch-registry.service';\n\ntype RequestIdleCallbackHandle = any;\ntype RequestIdleCallbackOptions = {\n  timeout: number;\n};\ntype RequestIdleCallbackDeadline = {\n  readonly didTimeout: boolean;\n  timeRemaining: (() => number);\n};\n\ntype RequestIdleCallback = ((\n  callback: ((deadline: RequestIdleCallbackDeadline) => void),\n  opts?: RequestIdleCallbackOptions\n) => RequestIdleCallbackHandle);\n\nconst requestIdleCallback: RequestIdleCallback =\n  typeof window !== 'undefined'\n    ? (window as any).requestIdleCallback ||\n      function(cb: Function) {\n        const start = Date.now();\n        return setTimeout(function() {\n          cb({\n            didTimeout: false,\n            timeRemaining: function() {\n              return Math.max(0, 50 - (Date.now() - start));\n            }\n          });\n        }, 1);\n      }\n    : () => {};\n\nconst observerSupported = () =>\n  typeof window !== 'undefined' ? !!(window as any).IntersectionObserver : false;\n\nexport const LinkHandler = new InjectionToken('LinkHandler');\n\n@Injectable()\nexport class ObservableLinkHandler implements LinkHandlerStrategy {\n  private elementLink = new Map<Element, LinkDirective>();\n  private observer: IntersectionObserver | null = observerSupported()\n    ? new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const link = entry.target as HTMLAnchorElement;\n\n            const routerLink = this.elementLink.get(link);\n            if ( !routerLink || !routerLink.urlTree ) return;\n\n            this.registry.add(routerLink.urlTree);\n            this.observer.unobserve(link);\n            requestIdleCallback(() => {\n              this.loader.preload().subscribe(() => void 0);\n            });\n          }\n        });\n      })\n    : null;\n\n  constructor(\n    private loader: RouterPreloader,\n    private registry: PrefetchRegistry,\n    private ngZone: NgZone,\n  ) {}\n\n  register(el: LinkDirective) {\n    this.elementLink.set(el.element, el);\n    this.ngZone.runOutsideAngular(() => {\n      this.observer.observe(el.element);\n    });\n  }\n\n  // First call to unregister will not hit this.\n  unregister(el: LinkDirective) {\n    if (this.elementLink.has(el.element)) {\n      this.observer.unobserve(el.element);\n      this.elementLink.delete(el.element);\n    }\n  }\n\n  supported() {\n    return observerSupported();\n  }\n\n}\n\n@Injectable()\nexport class PreloadLinkHandler implements LinkHandlerStrategy {\n  constructor(\n    private loader: RouterPreloader,\n    private registry: PrefetchRegistry,\n  ) {}\n\n  register(el: LinkDirective) {\n    this.registry.add(el.urlTree);\n    requestIdleCallback(() => this.loader.preload().subscribe(() => void 0));\n  }\n\n  unregister(_: LinkDirective) {}\n\n  supported() {\n    return true;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Optional,\n  Inject,\n  OnChanges,\n  OnDestroy,\n  Input,\n  SimpleChanges\n} from '@angular/core';\nimport { RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { LinkHandler } from './link-handler.service';\nimport { LinkHandlerStrategy } from './link-handler-strategy';\n\n@Directive({\n  selector: '[routerLink]'\n})\nexport class LinkDirective implements OnChanges, OnDestroy {\n  @Input() routerLink: Pick<RouterLink | RouterLinkWithHref, 'routerLink'>['routerLink'];\n  private rl: RouterLink | RouterLinkWithHref;\n  private linkHandler: LinkHandlerStrategy;\n\n  constructor(\n    @Inject(LinkHandler) private linkHandlers: LinkHandlerStrategy[],\n    private el: ElementRef,\n    @Optional() link: RouterLink,\n    @Optional() linkWithHref: RouterLinkWithHref\n  ) {\n    this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();\n    this.rl = link || linkWithHref;\n    if (this.element && this.element.setAttribute) {\n      this.element.setAttribute('ngx-ql', '');\n    }\n  }\n\n  ngOnChanges(c: SimpleChanges) {\n    if (c.routerLink) {\n      this.linkHandler.unregister(this);\n      this.linkHandler.register(this);\n    }\n  }\n\n  ngOnDestroy() {\n    this.linkHandler.unregister(this);\n  }\n\n  get element(): Element {\n    return this.el.nativeElement;\n  }\n\n  get urlTree(): any {\n    return this.rl.urlTree;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Router, Route, PRIMARY_OUTLET } from '@angular/router';\nimport { PrefetchRegistry } from './prefetch-registry.service';\nimport { EMPTY } from 'rxjs';\n\n@Injectable()\nexport class QuicklinkStrategy implements PreloadingStrategy {\n  loading = new Set<Route>();\n\n  constructor(\n    private registry: PrefetchRegistry,\n    private router: Router,\n  ) {}\n\n  preload(route: Route, load: Function) {\n    if (this.loading.has(route)) {\n      // Don't preload the same route twice\n      return EMPTY;\n    }\n    const conn = typeof navigator !== 'undefined' ? (navigator as any).connection : undefined;\n    if (conn) {\n      // Don't preload if the user is on 2G. or if Save-Data is enabled..\n      if ((conn.effectiveType || '').includes('2g') || conn.saveData) return EMPTY;\n    }\n    // Prevent from preloading\n    if (route.data && route.data.preload === false) {\n      return EMPTY;\n    }\n    const fullPath = findPath(this.router.config, route);\n    if (this.registry.shouldPrefetch(fullPath)) {\n      this.loading.add(route);\n      return load();\n    }\n\n    return EMPTY;\n  }\n}\n\nconst findPath = (config: Route[], route: Route): string => {\n  config = config.slice();\n  const parent = new Map<Route, Route>();\n  const visited = new Set<Route>();\n  while (config.length) {\n    const el = config.shift();\n    visited.add(el);\n    if (el === route) break;\n    let children = el.children || [];\n    const current = (el as any)._loadedConfig;\n    if (current && current.routes) {\n      children = children.concat(current.routes);\n    }\n    children.forEach((r: Route) => {\n      if (visited.has(r)) return;\n      parent.set(r, el);\n      config.push(r);\n    });\n  }\n  let path = '';\n  let current = route;\n\n  while (current) {\n    if (isPrimaryRoute(current)) {\n      path = `/${current.path}${path}`;\n    } else {\n      path = `/(${current.outlet}:${current.path}${path})`;\n    }\n    current = parent.get(current);\n  }\n\n  return path.replace(/\\/\\//, '/');\n};\n\nfunction isPrimaryRoute(route: Route) {\n  return route.outlet === PRIMARY_OUTLET || !route.outlet;\n}\n","import { NgModule } from '@angular/core';\nimport { LinkDirective } from './link.directive';\nimport { ObservableLinkHandler, PreloadLinkHandler, LinkHandler } from './link-handler.service';\nimport { PrefetchRegistry } from './prefetch-registry.service';\nimport { QuicklinkStrategy } from './quicklink-strategy.service';\n\n@NgModule({\n  declarations: [LinkDirective],\n  providers: [\n    {\n      provide: LinkHandler,\n      useClass: ObservableLinkHandler,\n      multi: true\n    },\n    {\n      provide: LinkHandler,\n      useClass: PreloadLinkHandler,\n      multi: true\n    },\n    PrefetchRegistry,\n    QuicklinkStrategy\n  ],\n  exports: [LinkDirective]\n})\nexport class QuicklinkModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {LinkHandlerStrategy as ɵd} from './src/link-handler-strategy';\nexport {LinkHandler as ɵa,ObservableLinkHandler as ɵb,PreloadLinkHandler as ɵc} from './src/link-handler.service';\nexport {PrefetchRegistry as ɵe} from './src/prefetch-registry.service';"]}