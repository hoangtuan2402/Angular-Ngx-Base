{"version":3,"file":"link-handler.service.d.ts","sources":["link-handler.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\r\nimport { LinkDirective } from './link.directive';\r\nimport { RouterPreloader } from '@angular/router';\r\nimport { LinkHandlerStrategy } from './link-handler-strategy';\r\nimport { PrefetchRegistry } from './prefetch-registry.service';\r\nexport declare const LinkHandler: InjectionToken<unknown>;\r\nexport declare class ObservableLinkHandler implements LinkHandlerStrategy {\r\n    private loader;\r\n    private registry;\r\n    private ngZone;\r\n    private elementLink;\r\n    private observer;\r\n    constructor(loader: RouterPreloader, registry: PrefetchRegistry, ngZone: NgZone);\r\n    register(el: LinkDirective): void;\r\n    unregister(el: LinkDirective): void;\r\n    supported(): boolean;\r\n}\r\nexport declare class PreloadLinkHandler implements LinkHandlerStrategy {\r\n    private loader;\r\n    private registry;\r\n    constructor(loader: RouterPreloader, registry: PrefetchRegistry);\r\n    register(el: LinkDirective): void;\r\n    unregister(_: LinkDirective): void;\r\n    supported(): boolean;\r\n}\r\n"]}