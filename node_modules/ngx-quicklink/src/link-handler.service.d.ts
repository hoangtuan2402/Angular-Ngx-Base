import { InjectionToken, NgZone } from '@angular/core';
import { LinkDirective } from './link.directive';
import { RouterPreloader } from '@angular/router';
import { LinkHandlerStrategy } from './link-handler-strategy';
import { PrefetchRegistry } from './prefetch-registry.service';
import * as ɵngcc0 from '@angular/core';
export declare const LinkHandler: InjectionToken<unknown>;
export declare class ObservableLinkHandler implements LinkHandlerStrategy {
    private loader;
    private registry;
    private ngZone;
    private elementLink;
    private observer;
    constructor(loader: RouterPreloader, registry: PrefetchRegistry, ngZone: NgZone);
    register(el: LinkDirective): void;
    unregister(el: LinkDirective): void;
    supported(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ObservableLinkHandler, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<ObservableLinkHandler>;
}
export declare class PreloadLinkHandler implements LinkHandlerStrategy {
    private loader;
    private registry;
    constructor(loader: RouterPreloader, registry: PrefetchRegistry);
    register(el: LinkDirective): void;
    unregister(_: LinkDirective): void;
    supported(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PreloadLinkHandler, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<PreloadLinkHandler>;
}

//# sourceMappingURL=link-handler.service.d.ts.map