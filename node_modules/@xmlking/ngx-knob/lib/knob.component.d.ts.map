{"version":3,"file":"knob.component.d.ts","sources":["knob.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnInit, EventEmitter, OnChanges } from '@angular/core';\r\nimport 'd3-selection-multi';\r\nexport interface KnobOptions {\r\n    skin?: {\r\n        type: string;\r\n        width: number;\r\n        color: string;\r\n        spaceWidth: number;\r\n    };\r\n    animate?: {\r\n        enabled: true;\r\n        duration: number;\r\n        ease: string;\r\n    };\r\n    size: number;\r\n    startAngle: number;\r\n    endAngle: number;\r\n    unit: string;\r\n    displayInput: true;\r\n    inputFormatter: any;\r\n    readOnly: boolean;\r\n    trackWidth: number;\r\n    barWidth: number;\r\n    trackColor: string;\r\n    barColor: string;\r\n    prevBarColor: string;\r\n    textColor: string;\r\n    barCap: number;\r\n    trackCap: number;\r\n    fontSize: string;\r\n    fontWeigth: string;\r\n    fontFamily: string;\r\n    valueFormat?: string;\r\n    subText: {\r\n        enabled: false;\r\n        text: '';\r\n        fontFamily: string;\r\n        fontWeight: string;\r\n        color: string;\r\n        font: string;\r\n        offset: number;\r\n    };\r\n    bgColor: string;\r\n    bgFull: false;\r\n    scale: {\r\n        enabled: false;\r\n        type: string;\r\n        color: string;\r\n        width: number;\r\n        quantity: number;\r\n        height: number;\r\n        spaceWidth: number;\r\n    };\r\n    step: number;\r\n    displayPrevious: false;\r\n    min: number;\r\n    max: number;\r\n    dynamicOptions: false;\r\n}\r\nexport declare class KnobComponent implements OnInit, OnChanges {\r\n    private el;\r\n    element: HTMLElement;\r\n    value: number;\r\n    label: number;\r\n    options: any;\r\n    valueChange: EventEmitter<number>;\r\n    inDrag: Boolean;\r\n    bgArc: any;\r\n    trackArc: any;\r\n    changeArc: any;\r\n    valueArc: any;\r\n    interactArc: any;\r\n    hoopArc: any;\r\n    changeElem: any;\r\n    valueElem: any;\r\n    defaultOptions: KnobOptions;\r\n    animations: any;\r\n    constructor(el: ElementRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: any): void;\r\n    /**\r\n     *   Convert from value to radians\r\n     */\r\n    valueToRadians(value: number, valueEnd: number, angleEnd?: number, angleStart?: number, valueStart?: number): number;\r\n    /**\r\n     *   Convert from radians to value\r\n     */\r\n    radiansToValue(radians: number, valueEnd: number, valueStart: number, angleEnd: number, angleStart: number): number;\r\n    /**\r\n     *   Create the arc\r\n     */\r\n    createArc(innerRadius: number, outerRadius: number, startAngle?: number, endAngle?: number, cornerRadius?: number): any;\r\n    /**\r\n     *   Draw the arc\r\n     */\r\n    drawArc(svg: any, arc: any, label: string, style: any, click?: any, drag?: any): any;\r\n    /**\r\n     *   Create the arcs\r\n     */\r\n    createArcs(): void;\r\n    /**\r\n     *   Draw the arcs\r\n     */\r\n    drawArcs(clickInteraction: any, dragBehavior: any): void;\r\n    /**\r\n     *   Draw knob component\r\n     */\r\n    draw(): void;\r\n    /**\r\n     *   Set a value\r\n     */\r\n    setValue(newValue: any): void;\r\n}\r\n"]}