{"version":3,"file":"perfect-scrollbar.directive.d.ts","sources":["perfect-scrollbar.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import PerfectScrollbar from 'perfect-scrollbar';\r\nimport { NgZone, ElementRef, OnInit, DoCheck, OnChanges, OnDestroy, EventEmitter, SimpleChanges, KeyValueDiffers } from '@angular/core';\r\nimport { Geometry, Position } from './perfect-scrollbar.interfaces';\r\nimport { PerfectScrollbarConfigInterface } from './perfect-scrollbar.interfaces';\r\nexport declare class PerfectScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges {\r\n    private zone;\r\n    private differs;\r\n    elementRef: ElementRef;\r\n    private platformId;\r\n    private defaults;\r\n    private instance;\r\n    private ro;\r\n    private timeout;\r\n    private animation;\r\n    private configDiff;\r\n    private readonly ngDestroy;\r\n    disabled: boolean;\r\n    config?: PerfectScrollbarConfigInterface;\r\n    psScrollY: EventEmitter<any>;\r\n    psScrollX: EventEmitter<any>;\r\n    psScrollUp: EventEmitter<any>;\r\n    psScrollDown: EventEmitter<any>;\r\n    psScrollLeft: EventEmitter<any>;\r\n    psScrollRight: EventEmitter<any>;\r\n    psYReachEnd: EventEmitter<any>;\r\n    psYReachStart: EventEmitter<any>;\r\n    psXReachEnd: EventEmitter<any>;\r\n    psXReachStart: EventEmitter<any>;\r\n    constructor(zone: NgZone, differs: KeyValueDiffers, elementRef: ElementRef, platformId: Object, defaults: PerfectScrollbarConfigInterface);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngDoCheck(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ps(): PerfectScrollbar | null;\r\n    update(): void;\r\n    geometry(prefix?: string): Geometry;\r\n    position(absolute?: boolean): Position;\r\n    scrollable(direction?: string): boolean;\r\n    scrollTo(x: number, y?: number, speed?: number): void;\r\n    scrollToX(x: number, speed?: number): void;\r\n    scrollToY(y: number, speed?: number): void;\r\n    scrollToTop(offset?: number, speed?: number): void;\r\n    scrollToLeft(offset?: number, speed?: number): void;\r\n    scrollToRight(offset?: number, speed?: number): void;\r\n    scrollToBottom(offset?: number, speed?: number): void;\r\n    scrollToElement(element: HTMLElement | string, offset?: number, speed?: number): void;\r\n    private animateScrolling;\r\n}\r\n"]}