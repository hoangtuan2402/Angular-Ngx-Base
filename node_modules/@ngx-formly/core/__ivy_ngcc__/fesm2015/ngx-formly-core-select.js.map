{"version":3,"file":"ngx-formly-core-select.js","sources":["@ngx-formly/core/select/select-options.pipe.ts","@ngx-formly/core/select/select.module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Pipe({ name: 'formlySelectOptions' })\nexport class FormlySelectOptionsPipe implements PipeTransform {\n  transform(options, field?: FormlyFieldConfig) {\n    if (!(options instanceof Observable)) {\n      options = observableOf(options);\n    }\n\n    return (options as Observable<any>).pipe(\n      map(value => this.toOptions(value, field || {})),\n    );\n  }\n\n  private toOptions(options, field: FormlyFieldConfig) {\n    const gOptions: any[] = [],\n      groups: { [key: string]: any[] } = {},\n      to = field.templateOptions || {};\n\n    to._flatOptions = true;\n    options.map((option: any) => {\n      if (!this.getGroupProp(option, to)) {\n        gOptions.push(this.toOption(option, to));\n      } else {\n        to._flatOptions = false;\n        if (!groups[this.getGroupProp(option, to)]) {\n          groups[this.getGroupProp(option, to)] = [];\n          gOptions.push({\n            label: this.getGroupProp(option, to),\n            group: groups[this.getGroupProp(option, to)],\n          });\n        }\n        groups[this.getGroupProp(option, to)].push(this.toOption(option, to));\n      }\n    });\n\n    return gOptions;\n  }\n\n  private toOption(item, to) {\n    return {\n      label: this.getLabelProp(item, to),\n      value: this.getValueProp(item, to),\n      disabled: this.getDisabledProp(item, to) || false,\n    };\n  }\n\n  private getLabelProp(item, to): string {\n    if (typeof to.labelProp === 'function') {\n      return to.labelProp(item);\n    }\n\n    if (this.shouldUseLegacyOption(item, to)) {\n      console.warn(`NgxFormly: legacy select option '{key, value}' is deprecated since v5.5, use '{value, label}' instead.`);\n      return item.value;\n    }\n\n    return item[to.labelProp || 'label'];\n  }\n\n  private getValueProp(item, to): string {\n    if (typeof to.valueProp === 'function') {\n      return to.valueProp(item);\n    }\n\n    if (this.shouldUseLegacyOption(item, to)) {\n      return item.key;\n    }\n\n    return item[to.valueProp || 'value'];\n  }\n\n  private getDisabledProp(item, to): string {\n    if (typeof to.disabledProp === 'function') {\n      return to.disabledProp(item);\n    }\n    return item[to.disabledProp || 'disabled'];\n  }\n\n  private getGroupProp(item, to): string {\n    if (typeof to.groupProp === 'function') {\n      return to.groupProp(item);\n    }\n\n    return item[to.groupProp || 'group'];\n  }\n\n  private shouldUseLegacyOption(item, to) {\n    return !to.valueProp\n      && !to.labelProp\n      && item != null\n      && typeof item === 'object'\n      && 'key' in item\n      && 'value' in item;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormlySelectOptionsPipe } from './select-options.pipe';\n\n@NgModule({\n  declarations: [FormlySelectOptionsPipe],\n  exports: [FormlySelectOptionsPipe],\n})\nexport class FormlySelectModule { }\n"]}