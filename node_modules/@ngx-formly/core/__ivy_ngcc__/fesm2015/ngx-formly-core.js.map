{"version":3,"file":"ngx-formly-core.js","sources":["@ngx-formly/core/lib/utils.ts","@ngx-formly/core/lib/services/formly.config.ts","@ngx-formly/core/lib/services/formly.form.builder.ts","@ngx-formly/core/lib/extensions/field-form/utils.ts","@ngx-formly/core/lib/components/formly.form.ts","@ngx-formly/core/lib/components/formly.field.ts","@ngx-formly/core/lib/components/formly.attributes.ts","@ngx-formly/core/lib/templates/field.type.ts","@ngx-formly/core/lib/templates/field-array.type.ts","@ngx-formly/core/lib/templates/field.wrapper.ts","@ngx-formly/core/lib/templates/formly.group.ts","@ngx-formly/core/lib/templates/formly.validation-message.ts","@ngx-formly/core/lib/templates/field-template.type.ts","@ngx-formly/core/lib/extensions/field-expression/utils.ts","@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","@ngx-formly/core/lib/extensions/field-validation/field-validation.ts","@ngx-formly/core/lib/extensions/field-form/field-form.ts","@ngx-formly/core/lib/extensions/core/core.ts","@ngx-formly/core/lib/core.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormlyFieldConfig } from './core';\nimport { isObservable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfigCache } from './components/formly.field.config';\nimport { TemplateRef } from '@angular/core';\n\nexport function disableTreeValidityCall(form: any, callback: Function) {\n  const _updateTreeValidity = form._updateTreeValidity.bind(form);\n  form._updateTreeValidity = () => {};\n  callback();\n  form._updateTreeValidity = _updateTreeValidity;\n}\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) {\n    type = 'template';\n  }\n  if (isFunction(type)) {\n    type = (type as any).prototype.constructor.name;\n  }\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: FormlyFieldConfigCache): string[] {\n  if (!field.key) {\n    return [];\n  }\n\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!field._keyPath || field._keyPath.key !== field.key) {\n    let path: string[] = [];\n    if (typeof field.key === 'string') {\n      const key = field.key.indexOf('[') === -1\n        ? field.key\n        : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n      path = key.indexOf('.') !== -1 ? key.split('.') : [key];\n    } else if (Array.isArray(field.key)) {\n      path = field.key.slice(0);\n    } else {\n      path = [`${field.key}`];\n    }\n\n    field._keyPath = { key: field.key, path };\n  }\n\n  return field._keyPath.path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignFieldValue(field: FormlyFieldConfigCache, value: any) {\n  let paths = getKeyPath(field);\n  if (paths.length === 0) {\n    return;\n  }\n\n  let root = field;\n  while (root.parent) {\n    root = root.parent;\n    paths = [...getKeyPath(root), ...paths];\n  }\n\n  if (value === undefined && field.resetOnHide) {\n    const k = paths.pop();\n    const m = paths.reduce((model, path) => model[path] || {}, root.model);\n    delete m[k];\n    return;\n  }\n\n  assignModelValue(root.model, paths, value);\n}\n\nexport function assignModelValue(model: any, paths: string[], value: any) {\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n\n    model = model[path];\n  }\n\n  model[paths[paths.length - 1]] = clone(value);\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  let model = field.parent.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n\n  return model;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2)\n    && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)\n    && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport function clone(value: any): any {\n  if (\n    !isObject(value)\n    || isObservable(value)\n    || (value instanceof TemplateRef)\n    || /* instanceof SafeHtmlImpl */ value.changingThisBreaksApplicationSecurity\n    || ['RegExp', 'FileList', 'File', 'Blob'].indexOf(value.constructor.name) !== -1\n  ) {\n    return value;\n  }\n\n  if (value instanceof Set) {\n    return new Set(value);\n  }\n\n  if (value instanceof Map) {\n    return new Map(value);\n  }\n\n  // https://github.com/moment/moment/blob/master/moment.js#L252\n  if (value._isAMomentObject && isFunction(value.clone)) {\n    return value.clone();\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\n    if (propDesc.get) {\n      Object.defineProperty(newVal, prop, propDesc);\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n\n    return newVal;\n  }, c);\n}\n\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\n  Object.defineProperty(field, prop, { enumerable: false, writable: true, configurable: true });\n  field[prop] = defaultValue;\n}\n\nexport function wrapProperty<T = any>(\n  o: any,\n  prop: string,\n  setFn: (change: {currentValue: T, previousValue?: T, firstChange: boolean}) => void,\n) {\n  if (!o._observers) {\n    defineHiddenProp(o, '_observers', {});\n  }\n\n  if (!o._observers[prop]) {\n    o._observers[prop] = [];\n  }\n\n  let fns: typeof setFn[] = o._observers[prop];\n  if (fns.indexOf(setFn) === -1) {\n    fns.push(setFn);\n    setFn({ currentValue: o[prop], firstChange: true });\n    if (fns.length === 1) {\n      defineHiddenProp(o, `___$${prop}`, o[prop]);\n      Object.defineProperty(o, prop, {\n        configurable: true,\n        get: () => o[`___$${prop}`],\n        set: currentValue => {\n          if (currentValue !== o[`___$${prop}`]) {\n            const previousValue = o[`___$${prop}`];\n            o[`___$${prop}`] = currentValue;\n            fns.forEach(changeFn => changeFn({ previousValue, currentValue, firstChange: false }));\n          }\n        },\n      });\n    }\n  }\n\n  return () => fns.splice(fns.indexOf(setFn), 1);\n}\n","import { Injectable, InjectionToken, ComponentRef } from '@angular/core';\nimport { ValidationErrors, AbstractControl } from '@angular/forms';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge, defineHiddenProp } from './../utils';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../components/formly.field.config';\nimport { Observable } from 'rxjs';\n\nexport const FORMLY_CONFIG = new InjectionToken<FormlyConfig>('FORMLY_CONFIG');\n\n/** @experimental */\nexport interface FormlyExtension {\n  prePopulate?(field: FormlyFieldConfig): void;\n  onPopulate?(field: FormlyFieldConfig): void;\n  postPopulate?(field: FormlyFieldConfig): void;\n}\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: ValidationMessageOption['message'] } = {};\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n  extras: ConfigOption['extras'] = {\n    checkExpressionOn: 'changeDetectionCheck',\n    lazyRender: false,\n    showError: function(field: FieldType) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || !!(field.field.validation && field.field.validation.show));\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      console.warn(`NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead.`);\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach(c => this.extensions[c.name] = c.extension);\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{ name: options.name };\n      }\n\n      ['component', 'extends', 'defaultOptions', 'wrappers'].forEach(prop => {\n        if (options.hasOwnProperty(prop)) {\n          this.types[options.name][prop] = options[prop];\n        }\n      });\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] The type \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    const type = this.getType(field.type);\n    if (type.defaultOptions) {\n      reverseDeepMerge(field, type.defaultOptions);\n    }\n\n    const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        const defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    const componentRef = this.resolveFieldTypeRef(field);\n    if (componentRef && componentRef.instance && componentRef.instance.defaultOptions) {\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\n    }\n\n    if (!field.wrappers && type.wrappers) {\n      field.wrappers = [...type.wrappers];\n    }\n  }\n\n  /** @internal */\n  resolveFieldTypeRef(field: FormlyFieldConfigCache = {}): ComponentRef<FieldType> {\n    if (!field.type) {\n      return null;\n    }\n\n    const type = this.getType(field.type);\n    if (!type.component || type['_componentRef']) {\n      return type['_componentRef'];\n    }\n\n    const { _resolver, _injector } = field.parent.options;\n    const componentRef = _resolver\n      .resolveComponentFactory<FieldType>(type.component)\n      .create(_injector);\n\n    defineHiddenProp(type, '_componentRef', componentRef);\n    componentRef.destroy();\n\n    return type['_componentRef'];\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] The wrapper \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = [];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] The validator \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: ValidationMessageOption['message']) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig, options?: { [id: string]: any; }): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n  options?: { [id: string]: any };\n}\n\nexport interface ExtensionOption {\n  name: string;\n  extension: FormlyExtension;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string | Observable<string>);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  extensions?: ExtensionOption[];\n  validationMessages?: ValidationMessageOption[];\n\n  /** @deprecated use `extensions` instead */\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    /** @deprecated use `extensions` instead */\n    fieldTransform?: any,\n    immutable?: boolean,\n    showError?: (field: FieldType) => boolean;\n\n    /**\n     * Defines the option which formly rely on to check field expression properties.\n     * - `modelChange`: perform a check when the value of the form control changes (Will be set by default in the next major version).\n     * - `changeDetectionCheck`: triggers an immediate check when `ngDoCheck` is called.\n     *\n     * Defaults to `changeDetectionCheck`.\n     */\n    checkExpressionOn?: 'modelChange' | 'changeDetectionCheck',\n\n    /**\n     * Whether to lazily render field components or not when marked as hidden.\n     * - `true`: lazily render field components (Will be set by default in the next major version).\n     * - `false`: render field components and use CSS to control their visibility.\n     *\n     * Defaults to `false`.\n     */\n    lazyRender?: boolean,\n\n    /**\n     * When true, reset the value of hidden fields.\n     *\n     * Defaults to `false`.\n     */\n    resetFieldOnHide?: boolean,\n  };\n}\n","import { Injectable, ComponentFactoryResolver, Injector, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyConfig } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache, FormlyValueChangeEvent, FormlyFormOptionsCache } from '../components/formly.field.config';\nimport { Subject } from 'rxjs';\nimport { defineHiddenProp, disableTreeValidityCall } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n  ) {}\n\n  buildForm(formControl: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    if (!this.formlyConfig.extensions.core) {\n      throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n    }\n\n    const field = { fieldGroup, model, formControl, options: this._setOptions(options) };\n    disableTreeValidityCall(formControl, () => {\n      this._buildForm(field);\n      field.options._checkField(field, true);\n    });\n  }\n\n  private _buildForm(field: FormlyFieldConfigCache) {\n    this.getExtensions().forEach(extension => extension.prePopulate && extension.prePopulate(field));\n    this.getExtensions().forEach(extension => extension.onPopulate && extension.onPopulate(field));\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this._buildForm(f));\n    }\n\n    this.getExtensions().forEach(extension => extension.postPopulate && extension.postPopulate(field));\n  }\n\n  private getExtensions() {\n    return Object.keys(this.formlyConfig.extensions).map(name => this.formlyConfig.extensions[name]);\n  }\n\n  private _setOptions(options: FormlyFormOptionsCache) {\n    options = options || {};\n    options.formState = options.formState || {};\n\n    if (!options.showError) {\n      options.showError = this.formlyConfig.extras.showError;\n    }\n\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject<FormlyValueChangeEvent>());\n    }\n\n    if (!options._resolver) {\n      defineHiddenProp(options, '_resolver', this.componentFactoryResolver);\n    }\n\n    if (!options._injector) {\n      defineHiddenProp(options, '_injector', this.injector);\n    }\n\n    if (!options._hiddenFieldsForCheck) {\n      options._hiddenFieldsForCheck = [];\n    }\n\n    if (!options._markForCheck) {\n      options._markForCheck = (field) => {\n        if (field._componentRefs) {\n          field._componentRefs.forEach(ref => {\n            // NOTE: we cannot use ref.changeDetectorRef, see https://github.com/ngx-formly/ngx-formly/issues/2191\n            const changeDetectorRef = ref.injector.get(ChangeDetectorRef);\n            changeDetectorRef.markForCheck();\n          });\n        }\n\n        if (field.fieldGroup) {\n          field.fieldGroup.forEach(f => options._markForCheck(f));\n        }\n      };\n    }\n\n    if (!options._buildField) {\n      options._buildField = (field: FormlyFieldConfig) => {\n        this._setOptions(field.options);\n        this._buildForm(field);\n        (field.options as FormlyFormOptionsCache)._checkField(field, true);\n\n        return field;\n      };\n    }\n\n    return options;\n  }\n}\n","import { FormArray, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '../../core';\nimport { getKeyPath, getFieldValue, isNullOrUndefined, defineHiddenProp, wrapProperty } from '../../utils';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { EventEmitter } from '@angular/core';\n\nexport function unregisterControl(field: FormlyFieldConfig, emitEvent = false) {\n  const control = field.formControl;\n  const fieldIndex = control['_fields'] ? control['_fields'].indexOf(field) : -1;\n  if (fieldIndex !== -1) {\n    control['_fields'].splice(fieldIndex, 1);\n  }\n\n  const form = control.parent as FormArray | FormGroup;\n  if (!form) {\n    return;\n  }\n\n  const opts = { emitEvent };\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex(c => c === control);\n    if (key !== -1) {\n      updateControl(form, opts, () => form.removeAt(key));\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === control) {\n      updateControl(form, opts, () => form.removeControl(key));\n    }\n  }\n\n  control.setParent(null);\n}\n\nexport function findControl(field: FormlyFieldConfig): AbstractControl {\n  if (field.formControl) {\n    return field.formControl;\n  }\n\n  if (field['shareFormControl'] === false) {\n    return null;\n  }\n\n  const form = field.parent.formControl as FormGroup;\n\n  return form ? form.get(getKeyPath(field)) : null;\n}\n\nexport function registerControl(field: FormlyFieldConfigCache, control?: any, emitEvent = false) {\n  control = control || field.formControl;\n  if (!control['_fields']) {\n    defineHiddenProp(control, '_fields', []);\n  }\n  if (control['_fields'].indexOf(field) === -1) {\n    control['_fields'].push(field);\n  }\n\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n    control.setValidators(null);\n    control.setAsyncValidators(null);\n\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\n    wrapProperty(field.templateOptions, 'disabled', ({ firstChange, currentValue }) => {\n      if (!firstChange) {\n        currentValue ? field.formControl.disable() : field.formControl.enable();\n      }\n    });\n    if (control.registerOnDisabledChange) {\n      control.registerOnDisabledChange(\n        (value: boolean) => {\n          field.templateOptions['___$disabled'] = value;\n          // TODO remove in V6\n          field.options && field.options._markForCheck(field);\n        },\n      );\n    }\n  }\n\n  let parent = field.parent.formControl as FormGroup;\n  if (!parent || !field.key) {\n    return;\n  }\n\n  const paths = getKeyPath(field);\n  const value = getFieldValue(field);\n  if (\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n    && control.value !== value\n    && control instanceof FormControl\n  ) {\n    control.patchValue(value);\n  }\n\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!parent.get([path])) {\n      updateControl(\n        parent,\n        { emitEvent },\n        () => parent.setControl(path, new FormGroup({})),\n      );\n    }\n\n    parent = <FormGroup> parent.get([path]);\n  }\n\n  const key = paths[paths.length - 1];\n  if (!field._hide && parent.get([key]) !== control) {\n    updateControl(\n      parent,\n      { emitEvent },\n      () => parent.setControl(key, control),\n    );\n  }\n}\n\nexport function updateValidity(c: AbstractControl, onlySelf = false) {\n  const status = c.status;\n  const value = c.value;\n  c.updateValueAndValidity({ emitEvent: false, onlySelf });\n  if (status !== c.status) {\n    (c.statusChanges as EventEmitter<string>).emit(c.status);\n  }\n\n  if (value !== c.value) {\n    (c.valueChanges as EventEmitter<any>).emit(c.value);\n  }\n}\n\nfunction updateControl(form: FormGroup|FormArray, opts: { emitEvent: boolean }, action: Function) {\n  /**\n   *  workaround for https://github.com/angular/angular/issues/27679\n   */\n  if (form instanceof FormGroup && !form['__patchForEachChild']) {\n    defineHiddenProp(form, '__patchForEachChild', true);\n    (form as any)._forEachChild = (cb: Function) => {\n      Object\n        .keys(form.controls)\n        .forEach(k => form.controls[k] && cb(form.controls[k], k));\n    };\n  }\n\n  /**\n   * workaround for https://github.com/angular/angular/issues/20439\n   */\n  const updateValueAndValidity = form.updateValueAndValidity.bind(form);\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = (opts) => {\n      updateValueAndValidity({ ...(opts || {}), emitEvent: false });\n    };\n  }\n\n  action();\n\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = updateValueAndValidity;\n  }\n}\n\nexport function clearControl(form: AbstractControl) {\n  form['_fields'] && delete form['_fields'];\n  form.setValidators(null);\n  form.setAsyncValidators(null);\n  if (form instanceof FormGroup || form instanceof FormArray) {\n    Object.keys(form.controls)\n      .forEach((k) => clearControl(form.controls[k]));\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, OnDestroy, Attribute, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFormOptionsCache } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignFieldValue, isNullOrUndefined, wrapProperty, clone, defineHiddenProp, getKeyPath, isObject } from '../utils';\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime, switchMap, distinctUntilChanged, take } from 'rxjs/operators';\nimport { clearControl } from '../extensions/field-form/utils';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      hide-deprecation\n      [form]=\"field.form\"\n      [options]=\"field.options\"\n      [model]=\"field.model\"\n      [field]=\"field\">\n    </formly-field>\n    <ng-container #content>\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n  providers: [FormlyFormBuilder],\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() form: FormGroup | FormArray;\n\n  @Input()\n  set model(model: any) { this._model = this.immutable ? clone(model) : model; }\n  get model() {\n    if (!this._model) {\n      this._model = {};\n    }\n\n    return this._model;\n  }\n\n  @Input()\n  set fields(fields: FormlyFieldConfig[]) { this._fields = this.immutable ? clone(fields) : fields; }\n  get fields() { return this._fields || []; }\n\n  @Input()\n  set options(options: FormlyFormOptions) { this._options = this.immutable ? clone(options) : options; }\n  get options() { return this._options; }\n\n  @Output() modelChange = new EventEmitter<any>();\n  @ViewChild('content') set content(content: ElementRef<HTMLElement>) {\n    if (content) {\n      let hasContent = false;\n      let node = content.nativeElement.nextSibling;\n      while (node && !hasContent) {\n        if (\n          node.nodeType === Node.ELEMENT_NODE\n          || node.nodeType === Node.TEXT_NODE && node.textContent && node.textContent.trim() !== ''\n        ) {\n          hasContent = true;\n        }\n\n        node = node.nextSibling;\n      }\n\n      if (hasContent) {\n        console.warn(`NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag.`);\n      }\n    }\n  }\n\n  private immutable = false;\n  private _model: any;\n  private _modelChangeValue: any = {};\n  private _fields: FormlyFieldConfig[];\n  private _options: FormlyFormOptions;\n  private modelChangeSubs: Subscription[] = [];\n  private modelChange$ = new Subject<void>();\n  private modelChangeSub = this.modelChange$.pipe(\n    switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))),\n  ).subscribe(() => this.ngZone.runGuarded(() => {\n    // runGuarded is used to keep the expression changes in-sync\n    // https://github.com/ngx-formly/ngx-formly/issues/2095\n    this.checkExpressionChange();\n    this.modelChange.emit(this._modelChangeValue = clone(this.model));\n  }));\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyConfig: FormlyConfig,\n    private ngZone: NgZone,\n    // tslint:disable-next-line\n    @Attribute('immutable') immutable,\n    @Optional() private parentFormGroup: FormGroupDirective,\n  ) {\n    if (immutable !== null) {\n      console.warn(`NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead.`);\n    }\n\n    this.immutable = (immutable !== null) || !!formlyConfig.extras.immutable;\n  }\n\n  ngDoCheck() {\n    if (this.formlyConfig.extras.checkExpressionOn === 'changeDetectionCheck') {\n      this.checkExpressionChange();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // https://github.com/ngx-formly/ngx-formly/issues/2294\n    if (changes.model && this.field) {\n      this.field.model = this.model;\n    }\n\n    if (changes.fields && this.form) {\n      clearControl(this.form);\n    }\n\n    if (changes.fields || changes.form || (changes.model && this._modelChangeValue !== changes.model.currentValue)) {\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.options.updateInitialValue();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n    }\n  }\n\n  ngOnDestroy() {\n    this.modelChangeSub.unsubscribe();\n    this.clearModelSubscriptions();\n  }\n\n  changeModel({ key, value, field }: { key: string, value: any, field: FormlyFieldConfig }) {\n    assignFieldValue(field, value);\n    this.modelChange$.next();\n  }\n\n  setOptions() {\n    if (!this.options) {\n      this.options = {};\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = (model ?: any) => {\n        model = clone(isNullOrUndefined(model) ? (<FormlyFormOptionsCache> this.options)._initialModel : model);\n        if (this.model) {\n          Object.keys(this.model).forEach(k => delete this.model[k]);\n          Object.assign(this.model, model || {});\n        }\n\n        (<FormlyFormOptionsCache> this.options)._buildForm();\n\n        // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n        // but only when the current component is a root one.\n        if (this.options.parentForm && this.options.parentForm.control === this.form) {\n          this.options.parentForm.resetForm(this.model);\n        } else {\n          this.form.reset(this.model);\n        }\n      };\n    }\n\n    if (!this.options.parentForm && this.parentFormGroup) {\n      defineHiddenProp(this.options, 'parentForm', this.parentFormGroup);\n      wrapProperty(this.options.parentForm, 'submitted', ({ firstChange }) => {\n        if (!firstChange) {\n          this.checkExpressionChange();\n          (<FormlyFormOptionsCache> this.options)._markForCheck({\n            fieldGroup: this.fields,\n            model: this.model,\n            formControl: this.form,\n            options: this.options,\n          });\n        }\n      });\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = () => (<FormlyFormOptionsCache> this.options)._initialModel = clone(this.model);\n    }\n\n    if (!(<FormlyFormOptionsCache> this.options)._buildForm) {\n      (<FormlyFormOptionsCache> this.options)._buildForm = (emitModelChange = false) => {\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n\n        if (emitModelChange) {\n          this.modelChange.emit(this._modelChangeValue = clone(this.model));\n        }\n      };\n    }\n\n    if (!(<any> this.options)._trackModelChanges) {\n      (this.options as any)._trackModelChanges = (emitModelChange = false) => {\n        this.clearModelSubscriptions();\n        this.trackModelChanges(this.fields);\n        if (emitModelChange) {\n          this.modelChange.emit(this._modelChangeValue = clone(this.model));\n        }\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.options && (<FormlyFormOptionsCache> this.options)._checkField) {\n      (<FormlyFormOptionsCache> this.options)._checkField({\n        fieldGroup: this.fields,\n        model: this.model,\n        formControl: this.form,\n        options: this.options,\n      });\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && !field.fieldGroup && field.formControl) {\n        const control = field.formControl;\n        let valueChanges = control.valueChanges.pipe(\n          distinctUntilChanged((x, y) => {\n            if (x !== y || Array.isArray(x) || isObject(x)) {\n              return false;\n            }\n\n            return true;\n          }),\n        );\n\n        const { updateOn, debounce } = field.modelOptions;\n        if ((!updateOn || updateOn === 'change') && debounce && debounce.default > 0) {\n          valueChanges = control.valueChanges.pipe(debounceTime(debounce.default));\n        }\n\n        this.modelChangeSubs.push(valueChanges.subscribe((value) => {\n          // workaround for https://github.com/angular/angular/issues/13792\n          if (control instanceof FormControl && control['_fields'] && control['_fields'].length > 1) {\n            control.patchValue(value, { emitEvent: false, onlySelf: true });\n          }\n\n          if (field.parsers && field.parsers.length > 0) {\n            field.parsers.forEach(parserFn => value = parserFn(value));\n          }\n\n          this.changeModel({ key: [...rootKey, ...getKeyPath(field)].join('.'), value, field });\n        }));\n\n        // workaround for v5 (https://github.com/ngx-formly/ngx-formly/issues/2061)\n        const observers = control.valueChanges['observers'];\n        if (observers && observers.length > 1) {\n          observers.unshift(observers.pop());\n        }\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, ...getKeyPath(field)] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n\n  private get field(): any {\n    return this.fields && this.fields[0] && this.fields[0].parent;\n  }\n}\n","import {\n  Component, EventEmitter, Input, Output,\n  ViewContainerRef, ViewChild, ComponentRef, SimpleChanges, Attribute, ComponentFactoryResolver,\n  OnInit, OnChanges, OnDestroy, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, Renderer2, ElementRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from './formly.field.config';\nimport { defineHiddenProp, wrapProperty } from '../utils';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { FieldType } from '../templates/field.type';\nimport { isObservable } from 'rxjs';\n\n@Component({\n  selector: 'formly-field',\n  template: `<ng-template #container></ng-template>`,\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() field: FormlyFieldConfig;\n\n  warnDeprecation = false;\n\n  @Input() set model(m: any) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set form(form: FormGroup) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set options(options: FormlyFormOptions) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('container', <any> {read: ViewContainerRef, static: true }) containerRef: ViewContainerRef;\n  private hostObservers: Function[] = [];\n  private componentRefs: any[] = [];\n  private hooksObservers: Function[] = [];\n  private detectFieldBuild = false;\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private renderer: Renderer2,\n    private resolver: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    // tslint:disable-next-line\n    @Attribute('hide-deprecation') hideDeprecation,\n  ) {\n    this.warnDeprecation = hideDeprecation === null;\n  }\n\n  ngAfterContentInit() {\n    this.triggerHook('afterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    this.triggerHook('afterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    this.triggerHook('afterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    this.triggerHook('afterViewChecked');\n  }\n\n  ngDoCheck() {\n    this.triggerHook('doCheck');\n    if (this.detectFieldBuild && (this.field && this.field.options)) {\n      this.render();\n    }\n  }\n\n  ngOnInit() {\n    this.triggerHook('onInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.triggerHook('onChanges', changes);\n  }\n\n  ngOnDestroy() {\n    this.resetRefs(this.field);\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hooksObservers.forEach(unsubscribe => unsubscribe());\n    this.triggerHook('onDestroy');\n  }\n\n  private renderField(containerRef: ViewContainerRef, f: FormlyFieldConfigCache, wrappers: string[] = []) {\n    if (this.containerRef === containerRef) {\n      this.resetRefs(this.field);\n      this.containerRef.clear();\n      wrappers = this.field ? this.field.wrappers : [];\n    }\n\n    if (wrappers && wrappers.length > 0) {\n      const [wrapper, ...wps] = wrappers;\n      const { component } = this.formlyConfig.getWrapper(wrapper);\n\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n      wrapProperty<ViewContainerRef>(ref.instance, 'fieldComponent', ({ firstChange, previousValue, currentValue }) => {\n        if (currentValue) {\n          if (previousValue && previousValue['_lContainer'] === currentValue['_lContainer']) {\n            return;\n          }\n\n          const viewRef = previousValue ? previousValue.detach() : null;\n          if (viewRef && !viewRef.destroyed) {\n            currentValue.insert(viewRef);\n          } else {\n            this.renderField(currentValue, f, wps);\n          }\n\n          !firstChange && ref.changeDetectorRef.detectChanges();\n        }\n      });\n    } else if (f && f.type) {\n      const { component } = this.formlyConfig.getType(f.type);\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n    }\n  }\n\n  private triggerHook(name: string, changes?: SimpleChanges) {\n    if (this.field && this.field.hooks && this.field.hooks[name]) {\n      if (!changes || changes.field) {\n        const r = this.field.hooks[name](this.field);\n        if (isObservable(r) && ['onInit', 'afterContentInit', 'afterViewInit'].indexOf(name) !== -1) {\n          const sub = r.subscribe();\n          this.hooksObservers.push(() => sub.unsubscribe());\n        }\n      }\n    }\n\n    if (this.field && this.field.lifecycle && this.field.lifecycle[name]) {\n      this.field.lifecycle[name](\n        this.field.form,\n        this.field,\n        this.field.model,\n        this.field.options,\n      );\n    }\n\n    if (name === 'onChanges' && changes.field) {\n      this.resetRefs(changes.field.previousValue);\n      this.render();\n    }\n  }\n\n  private attachComponentRef<T extends FieldType>(ref: ComponentRef<T>, field: FormlyFieldConfigCache) {\n    this.componentRefs.push(ref);\n    field._componentRefs.push(ref);\n    Object.assign(ref.instance, { field });\n  }\n\n  private render() {\n    if (!this.field) {\n      return;\n    }\n\n    // require Formly build\n    if (!this.field.options) {\n      this.detectFieldBuild = true;\n\n      return;\n    }\n\n    this.detectFieldBuild = false;\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hostObservers = [\n      wrapProperty(this.field, 'hide', ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setStyle(this.elementRef.nativeElement, 'display', currentValue ? 'none' : '');\n        }\n\n        if (!this.formlyConfig.extras.lazyRender) {\n          firstChange && this.renderField(this.containerRef, this.field);\n        } else {\n          if (currentValue) {\n            this.containerRef.clear();\n            if (this.field.className) {\n              this.renderer.removeAttribute(this.elementRef.nativeElement, 'class');\n            }\n          } else {\n            this.renderField(this.containerRef, this.field);\n            if (this.field.className) {\n              this.renderer.setAttribute(this.elementRef.nativeElement, 'class', this.field.className);\n            }\n          }\n        }\n      }),\n      wrapProperty(this.field, 'className', ({ firstChange, currentValue }) => {\n        if (\n          (!firstChange || (firstChange && currentValue))\n          && (!this.formlyConfig.extras.lazyRender || (this.field.hide !== true))\n        ) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'class', currentValue);\n        }\n      }),\n    ];\n  }\n\n  private resetRefs(field: FormlyFieldConfigCache) {\n    if (field) {\n      if (field._componentRefs) {\n        field._componentRefs = field._componentRefs.filter(ref => this.componentRefs.indexOf(ref) === -1);\n      } else {\n        defineHiddenProp(this.field, '_componentRefs', []);\n      }\n    }\n\n    this.componentRefs = [];\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges, Renderer2, DoCheck, Inject, OnDestroy } from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';\nimport { wrapProperty, defineHiddenProp, FORMLY_VALIDATORS } from '../utils';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '(change)': 'onHostChange($event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges, DoCheck, OnDestroy {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n  @Input() id: string;\n\n  private document: Document;\n  private uiAttributesCache: any = {};\n  private uiAttributes: string[] = null;\n\n  /**\n   * HostBinding doesn't register listeners conditionally which may produce some perf issues.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1991\n   */\n  private uiEvents = {\n    listeners: [],\n    events: ['click', 'keyup', 'keydown', 'keypress', 'focus', 'blur', 'change'],\n    callback: (eventName: string, $event: any) => {\n      switch (eventName) {\n        case 'focus':\n          return this.onFocus($event);\n        case 'blur':\n          return this.onBlur($event);\n        case 'change':\n          return this.onChange($event);\n        default:\n          return this.to[eventName](this.field, $event);\n      }\n    },\n  };\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions || {}; }\n\n  private get fieldAttrElements(): ElementRef[] { return (this.field && this.field['_elementRefs']) || []; }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) _document: any,\n  ) {\n    this.document = _document;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.field.name && this.setAttribute('name', this.field.name);\n      this.uiEvents.listeners.forEach((listener) => listener());\n      this.uiEvents.events.forEach((eventName) => {\n        if ((this.to && this.to[eventName]) || ['focus', 'blur', 'change'].indexOf(eventName) !== -1) {\n          this.uiEvents.listeners.push(\n            this.renderer.listen(this.elementRef.nativeElement, eventName, (e) => this.uiEvents.callback(eventName, e)),\n          );\n        }\n      });\n\n      if (this.to && this.to.attributes) {\n        wrapProperty(this.to, 'attributes', ({ currentValue, previousValue }) => {\n          if (previousValue) {\n            Object.keys(previousValue).forEach(attr => this.removeAttribute(attr));\n          }\n\n          if (currentValue) {\n            Object.keys(currentValue).forEach(attr => {\n              if (currentValue[attr] != null) {\n                this.setAttribute(attr, currentValue[attr]);\n              }\n            });\n          }\n        });\n      }\n\n      this.detachElementRef(changes.field.previousValue);\n      this.attachElementRef(changes.field.currentValue);\n      if (this.fieldAttrElements.length === 1) {\n        !this.id && this.field.id && this.setAttribute('id', this.field.id);\n        wrapProperty(this.field, 'focus', ({ currentValue }) => {\n          this.toggleFocus(currentValue);\n        });\n      }\n    }\n\n    if (changes.id) {\n      this.setAttribute('id', this.id);\n    }\n  }\n\n  /**\n   * We need to re-evaluate all the attributes on every change detection cycle, because\n   * by using a HostBinding we run into certain edge cases. This means that whatever logic\n   * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n   * Material issue: https://github.com/angular/components/issues/14024\n   */\n  ngDoCheck() {\n    if (!this.uiAttributes) {\n      const element = this.elementRef.nativeElement as HTMLElement;\n      this.uiAttributes = [...FORMLY_VALIDATORS, 'tabindex', 'placeholder', 'readonly', 'disabled', 'step'].filter(\n        (attr) => !element.hasAttribute || !element.hasAttribute(attr),\n      );\n    }\n\n    this.uiAttributes.forEach(attr => {\n      const value = this.to[attr];\n      if (\n        this.uiAttributesCache[attr] !== value\n        && (!this.to.attributes || !this.to.attributes.hasOwnProperty(attr.toLowerCase()))\n      ) {\n        this.uiAttributesCache[attr] = value;\n        if (value || value === 0) {\n          this.setAttribute(attr, value === true ? attr : `${value}`);\n        } else {\n          this.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.uiEvents.listeners.forEach(listener => listener());\n    this.detachElementRef(this.field);\n  }\n\n  toggleFocus(value: boolean) {\n    const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n    if (!element || !element.nativeElement.focus) {\n      return;\n    }\n\n    const isFocused = !!this.document.activeElement\n      && this.fieldAttrElements\n        .some(({ nativeElement }) => this.document.activeElement === nativeElement || nativeElement.contains(this.document.activeElement));\n\n    if (value && !isFocused) {\n      Promise.resolve().then(() => element.nativeElement.focus());\n    } else if (!value && isFocused) {\n      Promise.resolve().then(() => element.nativeElement.blur());\n    }\n  }\n\n  onFocus($event: any) {\n    this.field['___$focus'] = true;\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  onBlur($event: any) {\n    this.field['___$focus'] = false;\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  // handle custom `change` event, for regular ones rely on DOM listener\n  onHostChange($event: any) {\n    if ($event instanceof Event) {\n      return;\n    }\n\n    this.onChange($event);\n  }\n\n  onChange($event: any) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n\n    if (this.field.formControl) {\n      this.field.formControl.markAsDirty();\n    }\n  }\n\n  private attachElementRef(f: FormlyFieldConfig) {\n    if (!f) {\n      return;\n    }\n\n    if (f['_elementRefs'] && f['_elementRefs'].indexOf(this.elementRef) === -1) {\n      f['_elementRefs'].push(this.elementRef);\n    } else {\n      defineHiddenProp(f, '_elementRefs', [this.elementRef]);\n    }\n  }\n\n  private detachElementRef(f: FormlyFieldConfig) {\n    const index = f && f['_elementRefs'] ? this.fieldAttrElements.indexOf(this.elementRef) : -1;\n    if (index !== -1) {\n      this.field['_elementRefs'].splice(index, 1);\n    }\n  }\n\n  private setAttribute(attr: string, value: string) {\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n  }\n\n  private removeAttribute(attr: string) {\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport interface FieldTypeConfig extends FormlyFieldConfig {\n  formControl: NonNullable<FormControl>;\n  templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\n  options: NonNullable<FormlyFieldConfig['options']>;\n}\nexport interface FieldGroupTypeConfig extends FormlyFieldConfig {\n  formControl: NonNullable<FormGroup>;\n  templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\n  options: NonNullable<FormlyFieldConfig['options']>;\n}\n\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n  @Input() field: F;\n  defaultOptions?: Partial<F>;\n\n  @Input()\n  get model() { return this.field.model; }\n  set model(m: any) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get form() { return <FormGroup> this.field.parent.formControl; }\n  set form(form) { console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get options() { return this.field.options; }\n  set options(options: F['options']) { console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  get key() { return this.field.key; }\n\n  get formControl() { return this.field.formControl as NonNullable<F['formControl']>; }\n\n  get to() { return this.field.templateOptions || {}; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n\n/**\n * @deprecated use `FieldType` instead\n */\nexport abstract class Field extends FieldType {\n  constructor() {\n    super();\n    console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined, assignFieldValue } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { FORMLY_CONFIG, FormlyExtension } from '../services/formly.config';\nimport { registerControl, unregisterControl, findControl } from '../extensions/field-form/utils';\nimport { Directive } from '@angular/core';\n\nexport interface FieldArrayTypeConfig extends FormlyFieldConfig {\n  formControl: FormArray;\n  templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\n  options: NonNullable<FormlyFieldConfig['options']>;\n}\n\n// TODO remove `selector` in V6\n// tslint:disable-next-line\n@Directive({ selector: '[ÉµfieldArray]' })\nexport abstract class FieldArrayType<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<any> implements FormlyExtension {\n  field: F;\n  defaultOptions: any = {\n    defaultValue: [],\n  };\n\n  get formControl() {\n    return this.field.formControl as FormArray;\n  }\n\n  constructor(@Inject(FORMLY_CONFIG) @Optional() builder?: FormlyFormBuilder) {\n    super();\n\n    if (builder instanceof FormlyFormBuilder) {\n      console.warn(`NgxFormly: passing 'FormlyFormBuilder' to '${this.constructor.name}' type is not required anymore, you may remove it!`);\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfig) {\n    if (!field.formControl && field.key) {\n      const control = findControl(field);\n      registerControl(field, control ? control : new FormArray([], { updateOn: field.modelOptions.updateOn }));\n    }\n\n    field.fieldGroup = field.fieldGroup || [];\n\n    const length = field.model ? field.model.length : 0;\n    if (field.fieldGroup.length > length) {\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\n        unregisterControl(field.fieldGroup[i], true);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  add(i?: number, initialModel?: any, { markAsDirty } = { markAsDirty: true }) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n    if (!this.model) {\n      assignFieldValue(this.field, []);\n    }\n\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n\n    this._build();\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  remove(i: number, { markAsDirty } = { markAsDirty: true }) {\n    this.model.splice(i, 1);\n    unregisterControl(this.field.fieldGroup[i], true);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, key) => f.key = `${key}`);\n\n    this._build();\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  private _build() {\n    (<any> this.options)._buildField(this.field);\n    (<any> this.options)._trackModelChanges(true);\n  }\n}\n","import { ViewContainerRef, ViewChild } from '@angular/core';\nimport { FieldType } from './field.type';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldWrapper<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> {\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('fieldComponent', <any>{ read: ViewContainerRef, static: false }) fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class]': 'field.fieldGroupClassName || \"\"',\n  },\n})\nexport class FormlyGroup extends FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n","import { Component, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { FormlyConfig, ValidationMessageOption } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { FORMLY_VALIDATORS, isObject } from '../utils';\nimport { Observable, isObservable, of } from 'rxjs';\nimport { merge } from 'rxjs';\nimport { startWith, switchMap, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage$ | async }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyValidationMessage implements OnChanges {\n  @Input() field: FormlyFieldConfig;\n  errorMessage$: Observable<string>;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  ngOnChanges() {\n    const EXPR_VALIDATORS = FORMLY_VALIDATORS.map(v => `templateOptions.${v}`);\n    this.errorMessage$ = merge(\n      this.field.formControl.statusChanges,\n      (\n        !this.field.options\n        ? of(null)\n        : this.field.options.fieldChanges.pipe(\n            filter(({ field, type, property }) => {\n              return (field === this.field)\n                && (type === 'expressionChanges')\n                && (\n                  (property.indexOf('validation') !== -1)\n                  || (EXPR_VALIDATORS.indexOf(property) !== -1)\n                )\n              ;\n            }),\n          )\n      ),\n    ).pipe(\n      startWith(null),\n      switchMap(() => isObservable(this.errorMessage)\n        ? this.errorMessage\n        : of(this.errorMessage),\n      ),\n    );\n  }\n\n  get errorMessage() {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: ValidationMessageOption['message'] = this.formlyConfig.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"template\"></div>`,\n})\nexport class FormlyTemplateType extends FieldType {\n  get template() {\n    if (this.field && (this.field.template !== this.innerHtml.template)) {\n      this.innerHtml = {\n        template: this.field.template,\n        content: this.to.safeHtml\n          ? this.sanitizer.bypassSecurityTrustHtml(this.field.template)\n          : this.field.template,\n      };\n    }\n\n    return this.innerHtml.content;\n  }\n\n  private innerHtml = { content: null, template: null };\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    if (expression.indexOf('this.field') !== -1) {\n      console.warn(`NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead.`);\n    }\n\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `${expression} = expressionValue;`) as (value: any) => void;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { isObject, isNullOrUndefined, isUndefined, isFunction, defineHiddenProp, wrapProperty, getFieldValue, assignFieldValue } from '../../utils';\nimport { evalExpression, evalStringExpression } from './utils';\nimport { isObservable, Observable, Subscription } from 'rxjs';\nimport { FormlyExtension } from '../../services/formly.config';\nimport { unregisterControl, registerControl, updateValidity } from '../field-form/utils';\nimport { FormArray } from '@angular/forms';\n\n/** @experimental */\nexport class FieldExpressionExtension implements FormlyExtension {\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (field.parent || field.options._checkField) {\n      return;\n    }\n\n    let checkLocked = false;\n    field.options._checkField = (f, ignoreCache) => {\n      if (!checkLocked) {\n        checkLocked = true;\n        this.checkField(f, ignoreCache);\n        checkLocked = false;\n      }\n    };\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent || field._expressionProperties) {\n      return;\n    }\n\n    // cache built expression\n    defineHiddenProp(field, '_expressionProperties', {});\n\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties) {\n        const expressionProperty = field.expressionProperties[key];\n\n        if (typeof expressionProperty === 'string' || isFunction(expressionProperty)) {\n          field._expressionProperties[key] = {\n            expression: this._evalExpression(\n              key,\n              expressionProperty,\n              key === 'templateOptions.disabled' && field.parent.expressionProperties && field.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')\n                ? () => field.parent.templateOptions.disabled\n                : undefined,\n            ),\n          };\n          if (key === 'templateOptions.disabled') {\n            Object.defineProperty(field._expressionProperties[key], 'expressionValue', {\n              get: () => field.templateOptions.disabled,\n              set: () => { },\n              enumerable: true,\n              configurable: true,\n            });\n          }\n        } else if (expressionProperty instanceof Observable) {\n          const subscribe = () => (expressionProperty as Observable<any>)\n            .subscribe(v => {\n              this.setExprValue(field, key, v);\n              if (field.options && field.options._markForCheck) {\n                field.options._markForCheck(field);\n              }\n            });\n\n          let subscription: Subscription = subscribe();\n          const onInit = field.hooks.onInit;\n          field.hooks.onInit = () => {\n            if (subscription === null) {\n              subscription = subscribe();\n            }\n            return onInit && onInit(field);\n          };\n\n          const onDestroy = field.hooks.onDestroy;\n          field.hooks.onDestroy = () => {\n            onDestroy && onDestroy(field);\n            subscription.unsubscribe();\n            subscription = null;\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n\n      field.hideExpression = this._evalExpression(\n        'hide',\n        field.hideExpression,\n        () => {\n          let root = field.parent;\n          while (root.parent && !root.hide) {\n            root = root.parent;\n          }\n\n          return root.hide;\n        },\n      );\n    } else {\n      wrapProperty(field, 'hide', ({ currentValue, firstChange }) => {\n        field._hide = currentValue;\n        if (!firstChange || (firstChange && currentValue === true)) {\n          field.options._hiddenFieldsForCheck.push(field);\n        }\n      });\n    }\n  }\n\n  private _evalExpression(prop: string, expression, parentExpression?) {\n    return (...args) => {\n      try {\n        if (typeof expression === 'string') {\n          expression = evalStringExpression(expression, ['model', 'formState', 'field']);\n        }\n\n        if (typeof expression !== 'function') {\n          expression = () => !!expression;\n        }\n\n        return (parentExpression && parentExpression()) || expression(...args);\n      } catch (error) {\n        error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n        throw error;\n      }\n    };\n  }\n\n  private _evalExpressionPath(field: FormlyFieldConfigCache, prop: string) {\n    if (field._expressionProperties[prop] && field._expressionProperties[prop].expressionPaths) {\n      return field._expressionProperties[prop].expressionPaths;\n    }\n\n    let paths = [];\n    if (prop.indexOf('[') === -1) {\n      paths = prop.split('.');\n    } else {\n      prop\n        .split(/[[\\]]{1,2}/) // https://stackoverflow.com/a/20198206\n        .filter(p => p)\n        .forEach((path => {\n          const arrayPath = path.match(/['|\"](.*?)['|\"]/);\n          if (arrayPath) {\n            paths.push(arrayPath[1]);\n          } else {\n            paths.push(...path.split('.').filter(p => p));\n          }\n        }));\n    }\n\n    if (field._expressionProperties[prop]) {\n      field._expressionProperties[prop].expressionPaths = paths;\n    }\n\n    return paths;\n  }\n\n  private checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    const fieldChanged = this._checkField(field, ignoreCache);\n\n    field.options._hiddenFieldsForCheck\n      .sort(f => f.hide ? -1 : 1)\n      .forEach(f => this.toggleFormControl(f, !!f.hide, !ignoreCache));\n\n    field.options._hiddenFieldsForCheck = [];\n    if (fieldChanged) {\n      this.checkField(field);\n      if (field.options && field.options._markForCheck) {\n        field.options._markForCheck(field);\n      }\n    }\n  }\n\n  private _checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    let fieldChanged = false;\n    field.fieldGroup.forEach(f => {\n      if (!f.options) {\n        return;\n      }\n\n      this.checkFieldExpressionChange(f, ignoreCache) && (fieldChanged = true);\n      if (this.checkFieldVisibilityChange(f, ignoreCache)) {\n        field.options._hiddenFieldsForCheck.push(f);\n        fieldChanged = true;\n      }\n\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\n        this._checkField(f, ignoreCache) && (fieldChanged = true);\n      }\n    });\n\n    return fieldChanged;\n  }\n\n  private checkFieldExpressionChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || !field._expressionProperties) {\n      return false;\n    }\n\n    let markForCheck = false;\n    const expressionProperties = field._expressionProperties;\n\n    for (const key in expressionProperties) {\n      let expressionValue = evalExpression(expressionProperties[key].expression, { field }, [field.model, field.options.formState, field, ignoreCache]);\n      if (key === 'templateOptions.disabled') {\n        expressionValue = !!expressionValue;\n      }\n\n      if (\n        ignoreCache || (\n          expressionProperties[key].expressionValue !== expressionValue\n          && (\n            !(isObject(expressionValue) || isFunction(expressionValue))\n            || (\n              isFunction(expressionValue)\n              && ('' + expressionProperties[key].expressionValue !== '' + expressionValue)\n            )\n            || isObservable(expressionValue)\n            || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue)\n          )\n        )\n      ) {\n        markForCheck = true;\n        expressionProperties[key].expressionValue = expressionValue;\n        this.setExprValue(field, key, expressionValue);\n      }\n    }\n\n    return markForCheck;\n  }\n\n  private checkFieldVisibilityChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return false;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [field.model, field.options.formState, field, ignoreCache],\n    );\n    let markForCheck = false;\n    if (hideExpressionResult !== field.hide || ignoreCache) {\n      markForCheck = true;\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n    }\n\n    return markForCheck;\n  }\n\n  private setDisabledState(field: FormlyFieldConfig, value: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.expressionProperties || !f.expressionProperties.hasOwnProperty('templateOptions.disabled'))\n        .forEach(f => this.setDisabledState(f, value));\n    }\n\n    if (field.key && field.templateOptions.disabled !== value) {\n      field.templateOptions.disabled = value;\n    }\n  }\n\n  private toggleFormControl(field: FormlyFieldConfigCache, hide: boolean, resetOnHide: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.hideExpression)\n        .forEach(f => this.toggleFormControl(f, hide, resetOnHide));\n    }\n\n    if (field.formControl && field.key) {\n      defineHiddenProp(field, '_hide', !!(hide || field.hide));\n      const c = field.formControl;\n      if (c['_fields'] && c['_fields'].length > 1) {\n        updateValidity(c);\n      }\n\n      if (hide === true && (!c['_fields'] || c['_fields'].every(f => !!f._hide))) {\n        unregisterControl(field, true);\n        if (resetOnHide && field.resetOnHide) {\n          field.formControl.reset({ value: undefined, disabled: field.formControl.disabled });\n          if (field.fieldGroup) {\n            assignFieldValue(field, undefined);\n\n            if (field.formControl instanceof FormArray) {\n              field.fieldGroup.length = 0;\n            }\n          }\n        }\n      } else if (hide === false) {\n        if (field.resetOnHide && field.parent && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n          assignFieldValue(field, field.defaultValue);\n        }\n        registerControl(field, undefined, true);\n        if (field.resetOnHide && field.fieldArray && (field.fieldGroup || []).length !== (field.model || []).length) {\n          (<any> field.options)._buildForm(true);\n        }\n      }\n    }\n\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next(<FormlyValueChangeEvent> { field, type: 'hidden', value: hide });\n    }\n  }\n\n  private setExprValue(field: FormlyFieldConfigCache, prop: string, value: any) {\n    try {\n      let target = field;\n      const paths = this._evalExpressionPath(field, prop);\n      const lastIndex = paths.length - 1;\n      for (let i = 0; i < lastIndex; i++) {\n        target = target[paths[i]];\n      }\n\n      target[paths[lastIndex]] = value;\n    } catch (error) {\n      error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n      throw error;\n    }\n\n    if (prop === 'templateOptions.disabled' && field.key) {\n      this.setDisabledState(field, value);\n    }\n\n    if (prop.indexOf('model.') === 0) {\n      const path = prop.replace(/^model\\./, ''),\n        control = field.key && prop === path ? field.formControl : field.parent.formControl.get(path);\n\n      if (\n        control\n        && !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n        && control.value !== value\n      ) {\n        control.patchValue(value);\n      }\n    }\n\n    this.emitExpressionChanges(field, prop, value);\n  }\n\n  private emitExpressionChanges(field: FormlyFieldConfigCache, property: string, value: any) {\n    if (!field.options.fieldChanges) {\n      return;\n    }\n\n    field.options.fieldChanges.next({\n      field: field,\n      type: 'expressionChanges',\n      property,\n      value,\n    });\n  }\n}\n","import { FormlyExtension, FormlyConfig, ValidatorOption } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { FORMLY_VALIDATORS, defineHiddenProp, isPromise, wrapProperty, clone, isObject } from '../../utils';\nimport { updateValidity } from '../field-form/utils';\nimport { isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** @experimental */\nexport class FieldValidationExtension implements FormlyExtension {\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache, type: 'validators' | 'asyncValidators') {\n    const validators: ValidatorFn[] = [];\n    if (type === 'validators' && !(field.hasOwnProperty('fieldGroup') && !field.key)) {\n      validators.push(this.getPredefinedFieldValidation(field));\n    }\n\n    if (field[type]) {\n      for (const validatorName in field[type]) {\n        if (validatorName === 'validation' && !Array.isArray(field[type].validation)) {\n          field[type].validation = [field[type].validation];\n          console.warn(`NgxFormly(${field.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`);\n        }\n\n        validatorName === 'validation'\n          ? validators.push(...field[type].validation.map(v => this.wrapNgValidatorFn(field, v)))\n          : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName))\n        ;\n      }\n    }\n\n    defineHiddenProp(field, '_' + type, validators);\n  }\n\n  private getPredefinedFieldValidation(field: FormlyFieldConfigCache): ValidatorFn {\n    let VALIDATORS = [];\n    FORMLY_VALIDATORS.forEach(opt => wrapProperty(field.templateOptions, opt, ({ currentValue, firstChange }) => {\n      VALIDATORS = VALIDATORS.filter(o => o !== opt);\n      if (currentValue != null && currentValue !== false) {\n        VALIDATORS.push(opt);\n      }\n      if (!firstChange && field.formControl) {\n        updateValidity(field.formControl);\n      }\n    }));\n\n    return (control: AbstractControl) => {\n      if (VALIDATORS.length === 0) {\n        return null;\n      }\n\n      return Validators.compose(VALIDATORS.map(opt => () => {\n        const value = field.templateOptions[opt];\n        switch (opt) {\n          case 'required':\n            return Validators.required(control);\n          case 'pattern':\n            return Validators.pattern(value)(control);\n          case 'minLength':\n            return Validators.minLength(value)(control);\n          case 'maxLength':\n            return Validators.maxLength(value)(control);\n          case 'min':\n            return Validators.min(value)(control);\n          case 'max':\n            return Validators.max(value)(control);\n        }\n      }))(control);\n    };\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfigCache, validator: any, validatorName?: string) {\n    let validatorOption: ValidatorOption = null;\n    if (typeof validator === 'string') {\n      validatorOption = clone(this.formlyConfig.getValidator(validator));\n    }\n\n    if (typeof validator === 'object' && validator.name) {\n      validatorOption = clone(this.formlyConfig.getValidator(validator.name));\n      if (validator.options) {\n        validatorOption.options = validator.options;\n      }\n    }\n\n    if (typeof validator === 'object' && validator.expression) {\n      const { expression, ...options } = validator;\n      validatorOption = {\n        name: validatorName,\n        validation: expression,\n        options: Object.keys(options).length > 0 ? options : null,\n      };\n    }\n\n    if (typeof validator === 'function') {\n      validatorOption = {\n        name: validatorName,\n        validation: validator,\n      };\n    }\n\n    return (control: AbstractControl) => {\n      const errors: any = validatorOption.validation(control, field, validatorOption.options);\n      if (isPromise(errors)) {\n        return errors.then(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption));\n      }\n\n      if (isObservable(errors)) {\n        return errors.pipe(map(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption)));\n      }\n\n      return this.handleResult(field, validatorName ? !!errors : errors, validatorOption);\n    };\n  }\n\n  private handleAsyncResult(field: FormlyFieldConfigCache, errors: any, options: ValidatorOption) {\n    // workaround for https://github.com/angular/angular/issues/13200\n    if (field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n\n    return this.handleResult(field, errors, options);\n  }\n\n  private handleResult(field: FormlyFieldConfigCache, errors: any, { name, options }: ValidatorOption) {\n    if (typeof errors === 'boolean') {\n      errors = errors ? null : { [name]: options ? options : true };\n    }\n\n    const ctrl = field.formControl;\n    ctrl['_childrenErrors'] && ctrl['_childrenErrors'][name] && ctrl['_childrenErrors'][name]();\n\n    if (isObject(errors)) {\n      Object.keys(errors).forEach(name => {\n        const errorPath = errors[name].errorPath\n          ? errors[name].errorPath\n          : (options || {}).errorPath;\n\n        const childCtrl = errorPath ? field.formControl.get(errorPath) : null;\n        if (childCtrl) {\n          const { errorPath, ...opts } = errors[name];\n          childCtrl.setErrors({ ...(childCtrl.errors || {}), [name]: opts });\n\n          !ctrl['_childrenErrors'] && defineHiddenProp(ctrl, '_childrenErrors', {});\n          ctrl['_childrenErrors'][name] = () => {\n            const { [name]: toDelete, ...childErrors } = childCtrl.errors || {};\n            childCtrl.setErrors(Object.keys(childErrors).length === 0 ? null : childErrors);\n          };\n        }\n      });\n    }\n\n    return errors;\n  }\n}\n","import { FormlyExtension, FormlyConfig } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { FormGroup, FormControl, AbstractControlOptions, Validators, ValidatorFn, AsyncValidatorFn } from '@angular/forms';\nimport { getFieldValue, defineHiddenProp } from '../../utils';\nimport { registerControl, findControl, updateValidity } from './utils';\nimport { of } from 'rxjs';\n\n/** @experimental */\nexport class FieldFormExtension implements FormlyExtension {\n  private root: FormlyFieldConfigCache;\n  constructor(private config: FormlyConfig) { }\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (!this.root) {\n      this.root = field;\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent) {\n      return;\n    }\n\n    if (field.fieldGroup && !field.key) {\n      defineHiddenProp(field, 'formControl', field.parent.formControl);\n    } else {\n      this.addFormControl(field);\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (this.root !== field) {\n      return;\n    }\n\n    this.root = null;\n    this.setValidators(field);\n  }\n\n  private addFormControl(field: FormlyFieldConfigCache) {\n    let control = findControl(field);\n    if (!control) {\n      const controlOptions: AbstractControlOptions = { updateOn: field.modelOptions.updateOn };\n      const value = field.key ? getFieldValue(field) : field.defaultValue;\n\n      const ref = this.config ? this.config.resolveFieldTypeRef(field) : null;\n      if (ref && ref.componentType && ref.componentType['createControl']) {\n        const component = ref.componentType;\n        console.warn(`NgxFormly: '${component.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`);\n        control = component['createControl'](value, field);\n      } else if (field.fieldGroup) {\n        // TODO: move to postPopulate\n        control = new FormGroup({}, controlOptions);\n      } else {\n        control = new FormControl(value, controlOptions);\n      }\n    }\n\n    registerControl(field, control);\n  }\n\n  private setValidators(field: FormlyFieldConfigCache, disabled = false) {\n    let markForCheck = false;\n\n    if (disabled === false && field.key && field.templateOptions && field.templateOptions.disabled) {\n      disabled = true;\n    }\n\n    (field.fieldGroup || []).forEach(f => this.setValidators(f, disabled) && (markForCheck = true));\n\n    if (field.key || !field.parent || (!field.key && !field.fieldGroup)) {\n      const { formControl: c } = field;\n      field.templateOptions = field.templateOptions || {};\n      if (field.key && c && c instanceof FormControl) {\n        if (disabled && c.enabled) {\n          c.disable({ emitEvent: false, onlySelf: true });\n          markForCheck = true;\n        }\n\n        if (!disabled && c.disabled) {\n          c.enable({ emitEvent: false, onlySelf: true });\n          markForCheck = true;\n        }\n      }\n\n\n      if (c && (null === c.validator || null === c.asyncValidator)) {\n        c.setValidators(() => {\n          const v = Validators.compose(this.mergeValidators<ValidatorFn>(field, '_validators'));\n\n          return v ? v(c) : null;\n        });\n        c.setAsyncValidators(() => {\n          const v = Validators.composeAsync(this.mergeValidators<AsyncValidatorFn>(field, '_asyncValidators'));\n\n          return v ? v(c) : of(null);\n        });\n\n        markForCheck = true;\n      }\n\n      if (markForCheck) {\n        updateValidity(c, true);\n      }\n    }\n\n    return markForCheck;\n  }\n\n  private mergeValidators<T>(field: FormlyFieldConfigCache, type: '_validators' | '_asyncValidators'): T[] {\n    const validators: any = [];\n    const c = field.formControl;\n    if (c && c['_fields'] && c['_fields'].length > 1) {\n      c['_fields']\n        .filter((f: FormlyFieldConfigCache) => !f._hide)\n        .forEach((f: FormlyFieldConfigCache) => validators.push(...f[type]));\n    } else if (field[type]) {\n      validators.push(...field[type]);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.key && f.fieldGroup)\n        .forEach(f => validators.push(...this.mergeValidators(f, type)));\n    }\n\n    return validators;\n  }\n}\n","import { FormlyExtension, FormlyConfig, TemplateManipulators } from '../../services/formly.config';\nimport { FormlyFieldConfigCache, FormlyFieldConfig } from '../../components/formly.field.config';\nimport { FormGroup } from '@angular/forms';\nimport { getFieldId, isUndefined, getFieldValue, reverseDeepMerge, assignFieldValue } from '../../utils';\n\n/** @experimental */\nexport class CoreExtension implements FormlyExtension {\n  private formId = 0;\n  constructor(private formlyConfig: FormlyConfig) { }\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).prePopulate();\n    if (field.parent) {\n      return;\n    }\n\n    const fieldTransforms = (field.options && field.options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    (Array.isArray(fieldTransforms) ? fieldTransforms : [fieldTransforms]).forEach(fieldTransform => {\n      if (fieldTransform) {\n        console.warn(`NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead.`);\n        const fieldGroup = fieldTransform(field.fieldGroup, field.model, <FormGroup>field.formControl, field.options);\n        if (!fieldGroup) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate();\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        Object.defineProperty(f, 'parent', { get: () => field, configurable: true });\n        Object.defineProperty(f, 'index', { get: () => index, configurable: true });\n        this.formId++;\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).postPopulate();\n  }\n\n  private initFieldOptions(field: FormlyFieldConfigCache) {\n    const root = <FormlyFieldConfigCache> field.parent;\n    if (!root) {\n      return;\n    }\n\n    Object.defineProperty(field, 'form', { get: () => root.formControl, configurable: true });\n    Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n    Object.defineProperty(field, 'model', {\n      get: () => field.key && field.fieldGroup ? getFieldValue(field) : root.model,\n      configurable: true,\n    });\n\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field['index']),\n      hooks: {},\n      modelOptions: {},\n      validation: { messages: {} },\n      templateOptions: !field.type || !field.key ? {} : {\n        label: '',\n        placeholder: '',\n        focus: false,\n        disabled: false,\n      },\n    });\n\n    if (this.formlyConfig.extras.resetFieldOnHide && field.resetOnHide !== false) {\n      field.resetOnHide = true;\n    }\n\n    if (field.lifecycle) {\n      console.warn(`NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead.`);\n    }\n\n    if (\n      field.type !== 'formly-template'\n      && (\n        field.template\n        || (field.expressionProperties && field.expressionProperties.template)\n      )\n    ) {\n      if (field.type) {\n        console.warn(`NgxFormly: passing 'type' property is not allowed when 'template' is set.`);\n      }\n      field.type = 'formly-template';\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n    }\n\n    if (field.parent) {\n      let setDefaultValue = !isUndefined(field.key)\n        && !isUndefined(field.defaultValue)\n        && isUndefined(getFieldValue(field))\n        && (!field.resetOnHide || !(field.hide || field.hideExpression));\n      if (setDefaultValue && field.resetOnHide) {\n        let parent = field.parent;\n        while (parent && !parent.hideExpression && !parent.hide) {\n          parent = parent.parent;\n        }\n        setDefaultValue = !parent || !(parent.hideExpression || parent.hide);\n      }\n\n      if (setDefaultValue) {\n        assignFieldValue(field, field.defaultValue);\n      }\n    }\n\n    this.initFieldWrappers(field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    field.wrappers = field.wrappers || [];\n    const fieldTemplateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n      ...(field.templateOptions.templateManipulators || {}),\n    };\n\n    field.wrappers = [\n      ...this.formlyConfig.templateManipulators.preWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\n      ...field.wrappers,\n      ...this.formlyConfig.templateManipulators.postWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field)),\n    ].filter((el, i, a) => el && i === a.indexOf(el));\n  }\n\n  private getFieldComponentInstance(field: FormlyFieldConfigCache) {\n    const componentRef = this.formlyConfig.resolveFieldTypeRef(field);\n    const instance: FormlyExtension = componentRef ? componentRef.instance as any : {};\n\n    return {\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field),\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyGroup } from './templates/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FieldValidationExtension } from './extensions/field-validation/field-validation';\nimport { FieldFormExtension } from './extensions/field-form/field-form';\nimport { CoreExtension } from './extensions/core/core';\nimport { FieldArrayType } from './templates/field-array.type';\n\nexport function defaultFormlyConfig(formlyConfig: FormlyConfig): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [\n      { name: 'core', extension: new CoreExtension(formlyConfig) },\n      { name: 'field-validation', extension: new FieldValidationExtension(formlyConfig) },\n      { name: 'field-form', extension: new FieldFormExtension(formlyConfig) },\n      { name: 'field-expression', extension: new FieldExpressionExtension() },\n    ],\n  };\n}\n\n@NgModule({\n  declarations: [\n    FormlyForm,\n    FormlyField,\n    FormlyAttributes,\n    FormlyGroup,\n    FormlyValidationMessage,\n    FormlyTemplateType,\n    FieldArrayType as any,\n  ],\n  entryComponents: [FormlyGroup, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  constructor(\n    configService: FormlyConfig,\n    @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = [],\n  ) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach(config => configService.addConfig(config));\n  }\n}\n"]}