{"version":3,"file":"field.type.d.ts","sources":["field.type.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\r\nimport { FormlyFieldConfig } from '../components/formly.field.config';\r\nexport interface FieldTypeConfig extends FormlyFieldConfig {\r\n    formControl: NonNullable<FormControl>;\r\n    templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\r\n    options: NonNullable<FormlyFieldConfig['options']>;\r\n}\r\nexport interface FieldGroupTypeConfig extends FormlyFieldConfig {\r\n    formControl: NonNullable<FormGroup>;\r\n    templateOptions: NonNullable<FormlyFieldConfig['templateOptions']>;\r\n    options: NonNullable<FormlyFieldConfig['options']>;\r\n}\r\nexport declare abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\r\n    field: F;\r\n    defaultOptions?: Partial<F>;\r\n    model: any;\r\n    form: FormGroup;\r\n    options: F['options'];\r\n    readonly key: string | number | string[];\r\n    readonly formControl: NonNullable<F[\"formControl\"]>;\r\n    readonly to: import(\"../components/formly.field.config\").FormlyTemplateOptions;\r\n    readonly showError: boolean;\r\n    readonly id: string;\r\n    readonly formState: any;\r\n}\r\n/**\r\n * @deprecated use `FieldType` instead\r\n */\r\nexport declare abstract class Field extends FieldType {\r\n    constructor();\r\n}\r\n"]}