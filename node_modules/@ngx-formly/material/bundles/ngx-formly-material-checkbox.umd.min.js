!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms"),require("@angular/core"),require("@ngx-formly/material/form-field"),require("@angular/material/checkbox"),require("@angular/cdk/a11y")):"function"==typeof define&&define.amd?define("@ngx-formly/material/checkbox",["exports","@angular/common","@ngx-formly/core","@angular/forms","@angular/core","@ngx-formly/material/form-field","@angular/material/checkbox","@angular/cdk/a11y"],o):o((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].material=e["ngx-formly"].material||{},e["ngx-formly"].material.checkbox={}),e.ng.common,e.core,e.ng.forms,e.ng.core,e["ngx-formly"].material["form-field"],e.ng.material.checkbox,e.ng.cdk.a11y)}(this,function(e,o,r,t,i,n,a,c){"use strict";var l=function(e,o){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var r in o)o.hasOwnProperty(r)&&(e[r]=o[r])})(e,o)};var u=function(t){function e(e,o){var r=t.call(this)||this;return r.renderer=e,r.focusMonitor=o,r.defaultOptions={templateOptions:{hideFieldUnderline:!0,indeterminate:!0,floatLabel:"always",hideLabel:!0,align:"start",color:"accent"}},r}return function n(e,o){function r(){this.constructor=e}l(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}(e,t),e.prototype.onContainerClick=function(e){this.checkbox.focus(),t.prototype.onContainerClick.call(this,e)},e.prototype.ngAfterViewInit=function(){var o=this;this.checkbox&&this.focusMonitor.monitor(this.checkbox._inputElement,!0).subscribe(function(e){e?o.to.focus&&o.to.focus(o.field):o.to.blur&&o.to.blur(o.field)})},e.prototype.ngAfterViewChecked=function(){if(this.required!==this._required&&this.checkbox&&this.checkbox._inputElement){this._required=this.required;var e=this.checkbox._inputElement.nativeElement;this.required?this.renderer.setAttribute(e,"required","required"):this.renderer.removeAttribute(e,"required")}},e.prototype.ngOnDestroy=function(){this.checkbox&&this.focusMonitor.stopMonitoring(this.checkbox._inputElement)},e.decorators=[{type:i.Component,args:[{selector:"formly-field-mat-checkbox",template:'\n    <mat-checkbox\n      [formControl]="formControl"\n      [id]="id"\n      [formlyAttributes]="field"\n      [tabIndex]="to.tabindex"\n      [indeterminate]="to.indeterminate && formControl.value === null"\n      [color]="to.color"\n      [labelPosition]="to.align || to.labelPosition">\n      {{ to.label }}\n      <span *ngIf="to.required && to.hideRequiredMarker !== true" aria-hidden="true" class="mat-form-field-required-marker">*</span>\n    </mat-checkbox>\n  '}]}],e.ctorParameters=function(){return[{type:i.Renderer2},{type:c.FocusMonitor}]},e.propDecorators={checkbox:[{type:i.ViewChild,args:[a.MatCheckbox,{"static":!0}]}]},e}(n.FieldType),f=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{declarations:[u],imports:[o.CommonModule,t.ReactiveFormsModule,a.MatCheckboxModule,n.FormlyMatFormFieldModule,r.FormlyModule.forChild({types:[{name:"checkbox",component:u,wrappers:["form-field"]}]})]}]}],e}();e.FormlyMatCheckboxModule=f,e.FormlyFieldCheckbox=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-material-checkbox.umd.min.js.map