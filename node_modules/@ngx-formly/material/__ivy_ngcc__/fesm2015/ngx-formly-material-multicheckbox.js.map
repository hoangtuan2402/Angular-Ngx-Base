{"version":3,"file":"ngx-formly-material-multicheckbox.js","sources":["@ngx-formly/material/multicheckbox/multicheckbox.type.ts","@ngx-formly/material/multicheckbox/multicheckbox.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAyBa,wBAAyB,SAAQ,SAAS;AACtD,IAtBD;AACI;AAA8B,QAuBhC,mBAAc,GAAG;AAClB,YAAG,eAAe,EAAE;AACpB,gBAAK,kBAAkB,EAAE,IAAI;AAC7B,gBAAK,UAAU,EAAE,QAAQ;AACzB,gBAAK,OAAO,EAAE,EAAE;AAChB,gBAAK,KAAK,EAAE,QAAQ;AAAG,aACnB;AACJ,SAAE,CAAC;AAEJ,KAyBC;AACA;AAAS;AAAyB;AAA2B;AAAoB;AAAS,IA1BzF,QAAQ,CAAC,KAAU,EAAE,OAAgB;AACtC,QAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;AAClC,QAAG,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,YAAK,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO;AACxC,kBAAS,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC;AACnD,kBAAS,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM;AAAO;AAEhD;AACmB;AAAqB,gBAHE,CAAC,IAAI,CAAC,KAAK,KAAK,EAAC,CAC/D,CAAC;AACP,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,WAAW,CAAC,UAAU,mBAAM,IAAI,CAAC,WAAW,CAAC,KAAK,IAAE,CAAC,KAAK,GAAG,OAAO,IAAG,CAAC;AAClF,SAAI;AACJ,QAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;AACpC,KAAE;AAEH;AACG;AAAS;AAEL;AAAS,IAFd,gBAAgB,MAAK;AAEvB;AAAS;AACD;AAAoB;AAAS,IADnC,SAAS,CAAC,MAAW;AACtB;AAA0B,cAAjB,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;AAExC,QAAI,OAAO,KAAK,KACV,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO;AAC7B,eAAU,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5C,cAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CACxB,CAAC;AACL,KAAE;AACF;sDA1DA,SAAS,SAAC,mBACT,QAAQ,EAAE,gCAAgC,mBAC1C,QAAQ,EAAE;;;;;+CAcT,mBACD,IAAI,EAAE;YACJ,MAAM,EAAE,IAAI,oBACb,eACF;;;;;;;;4JACI;AAAE;AAA6C,yBACjD,YAAY,SAAC,WAAW;AAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;AAAE;AAAK;AAEhC;AAKL;ACjCR,MA+Ba,4BAA4B;AAAI;0DArB5C,QAAQ,SAAC,mBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;aACxC,OAAO,EAAE,uBACP,YAAY,uBACZ,mBAAmB;OAEnB,iBAAiB,uBAEjB,wBAAwB,uBACxB;YAAkB;MAClB,YAAY,CAAC;AAAQ,CAAC,2BACpB,KAAK;CAAE;IACL;OACE,IAAI,EAAE;OAAe;wBACrB,SAAS,EAAE;gBAAwB,mCACnC;EAAQ,EAAE,CAAC,YAAY,CAAC;KACzB;;AACF;QACF,CAAC,oBACH,gBACF;;;;;;;;;;;;;;;;;;;;;;;;;;6DACK;AAAE;AAAE;AAAK;AACX;AAAsH;AAAK;AAAE;AAAK;AAAmC;AAAsH;AAAK;AAAE;AAAoE;AAAE","sourcesContent":["import { Component, ViewChildren, QueryList } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckbox } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'formly-field-mat-multicheckbox',\n  template: `\n    <ng-container *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\">\n      <mat-checkbox\n        [id]=\"id + '_' + i\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"to.tabindex\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [checked]=\"isChecked(option)\"\n        [disabled]=\"formControl.disabled || option.disabled\"\n        (change)=\"onChange(option.value, $event.checked)\">\n          {{ option.label }}\n      </mat-checkbox>\n    </ng-container>\n  `,\n  host: {\n    '[id]': 'id',\n  },\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  @ViewChildren(MatCheckbox) checkboxes!: QueryList<MatCheckbox>;\n\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      color: 'accent', // workaround for https://github.com/angular/components/issues/18465\n    },\n  };\n\n  onChange(value: any, checked: boolean) {\n    this.formControl.markAsDirty();\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(checked\n        ? [...(this.formControl.value || []), value]\n        : [...(this.formControl.value || [])].filter(o => o !== value),\n      );\n    } else {\n      this.formControl.patchValue({ ...this.formControl.value, [value]: checked });\n    }\n    this.formControl.markAsTouched();\n  }\n\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n\n  isChecked(option: any) {\n    const value = this.formControl.value;\n\n    return value && (\n      this.to.type === 'array'\n        ? (value.indexOf(option.value) !== -1)\n        : value[option.value]\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldMultiCheckbox } from './multicheckbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldMultiCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatMultiCheckboxModule { }\n"]}