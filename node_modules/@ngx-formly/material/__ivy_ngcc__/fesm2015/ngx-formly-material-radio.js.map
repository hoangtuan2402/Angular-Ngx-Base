{"version":3,"file":"ngx-formly-material-radio.js","sources":["@ngx-formly/material/radio/radio.type.ts","@ngx-formly/material/radio/radio.module.ts"],"names":["wrapProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAwBa,gBAAiB,SAAQ,SAAS;AAAI,IAnBnD;AACI;AAA8B,QAoBhC,mBAAc,GAAG;AAClB,YAAG,eAAe,EAAE;AACpB,gBAAK,kBAAkB,EAAE,IAAI;AAC7B,gBAAK,UAAU,EAAE,QAAQ;AACzB,gBAAK,OAAO,EAAE,EAAE;AAChB,gBAAK,QAAQ,EAAE,CAAC,CAAC;AACjB,aAAI;AACJ,SAAE,CAAC;AAEJ,KA0BC;AACA;AAAS;AAAoB;AAAS,IA1BrC,eAAe;AAChB,QAAG,IAAI,CAAC,aAAa,GAAGA,aAAY,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO;AAAQ;AACxD;AACa;AACnB,QAHwD,CAAC,EAAE,YAAY,EAAE;AAC3E,YAAK,IACE,IAAI,CAAC,EAAE,CAAC,QAAQ,KAAK,CAAC,CAAC;AAC9B,mBAAU,YAAY;AACtB,mBAAU,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACrC;AACP;AACS,gBAAF,UAAU;AAAO;AACK;AAC5B,gBAFiB;AAClB;AAAsC,0BAAvB,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ;AAC/C,0BAAa,IAAI,CAAC,UAAU,CAAC,QAAQ;AACrC,0BAAa,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK;AAE3C,oBAAU,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AACxE,iBAAQ,EAAC,CAAC;AACV,aAAM;AACN,SAAI,EAAC,CAAC;AACN,KAAE;AAEH;AACG;AAAS;AAEL;AAAS,IAFd,gBAAgB,MAAK;AAEvB;AAAS;AACE;AAAS,IADlB,WAAW;AACZ,QAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AAC9C,KAAE;AACF;8CAxDA,SAAS,SAAC,mBACT,QAAQ,EAAE,wBAAwB,mBAClC,QAAQ,EAAE;;;;;;aAeT,eACF;;;;;;;;;;oQACI;AAAE;AAAqC,yBACzC,SAAS,SAAC,aAAa,qBAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;AAAS;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;AAAE;AAAK;AAElE;AAKJ;AChCA,MA6Ba,oBAAoB;AAAI;kDAlBpC,QAAQ,SAAC,mBACR,YAAY,EAAE,CAAC;CAAgB,CAAC,mBAChC,OAAO,EAAE,uBACP,YAAY,uBACZ;QAAmB,uBACnB,cAAc,uBAEd;AAAwB,uBACxB;YAAkB;WAClB,YAAY,CAAC,QAAQ,CAAC;0BACpB;GAAK,EAAE,CAAC;SACN,IAAI,EAAE;AAAO;AACb,SAAS,EAAE,gBAAgB;aAC3B,QAAQ,EAAE,CAAC,YAAY,CAAC;;KACzB,CAAC;cACH,CAAC,oBACH,gBACF;;;;;;;;;;;;;;;;;;;;;;;;6DACK;AAAE;AAAE;AAAK;AACH;AAAsH;AAAK;AAAE;AAAK;AAAmC;AAAsH;AAAK;AAAE;AAAoD;AAAE","sourcesContent":["import { Component, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatRadioGroup } from '@angular/material/radio';\nimport { ÉµwrapProperty as wrapProperty } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-mat-radio',\n  template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [required]=\"to.required\"\n      [tabindex]=\"to.tabindex\">\n      <mat-radio-button *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [id]=\"id + '_' + i\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [disabled]=\"option.disabled\"\n        [value]=\"option.value\">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType implements AfterViewInit, OnDestroy {\n  @ViewChild(MatRadioGroup, <any> { static: true }) radioGroup!: MatRadioGroup;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      tabindex: -1,\n    },\n  };\n\n  private focusObserver!: Function;\n  ngAfterViewInit() {\n    this.focusObserver = wrapProperty(this.field, 'focus', ({ currentValue }) => {\n      if (\n        this.to.tabindex === -1\n        && currentValue\n        && this.radioGroup._radios.length > 0\n      ) {\n        // https://github.com/ngx-formly/ngx-formly/issues/2498\n        setTimeout(() => {\n          const radio = this.radioGroup.selected\n            ? this.radioGroup.selected\n            : this.radioGroup._radios.first;\n\n          radio._elementRef.nativeElement.focus({ preventScroll: true });\n        });\n      }\n    });\n  }\n\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n\n  ngOnDestroy() {\n    this.focusObserver && this.focusObserver();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormlyFieldRadio } from './radio.type';\n\n@NgModule({\n  declarations: [FormlyFieldRadio],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'radio',\n        component: FormlyFieldRadio,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatRadioModule { }\n"]}