{"version":3,"file":"ngx-formly-material-checkbox.js","sources":["@ngx-formly/material/checkbox/checkbox.type.ts","@ngx-formly/material/checkbox/checkbox.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild, Renderer2, AfterViewChecked, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'formly-field-mat-checkbox',\n  template: `\n    <mat-checkbox\n      [formControl]=\"formControl\"\n      [id]=\"id\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"to.tabindex\"\n      [indeterminate]=\"to.indeterminate && formControl.value === null\"\n      [color]=\"to.color\"\n      [labelPosition]=\"to.align || to.labelPosition\">\n      {{ to.label }}\n      <span *ngIf=\"to.required && to.hideRequiredMarker !== true\" aria-hidden=\"true\" class=\"mat-form-field-required-marker\">*</span>\n    </mat-checkbox>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType implements AfterViewInit, AfterViewChecked, OnDestroy {\n  @ViewChild(MatCheckbox, <any> { static: true })checkbox!: MatCheckbox;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      indeterminate: true,\n      floatLabel: 'always',\n      hideLabel: true,\n      align: 'start', // start or end\n      color: 'accent', // workaround for https://github.com/angular/components/issues/18465\n    },\n  };\n\n  private _required!: boolean;\n  constructor(private renderer: Renderer2, private focusMonitor: FocusMonitor) {\n    super();\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    this.checkbox.focus();\n    super.onContainerClick(event);\n  }\n\n  ngAfterViewInit() {\n    if (this.checkbox) {\n      this.focusMonitor.monitor(this.checkbox._inputElement, true).subscribe(focusOrigin => {\n        if (focusOrigin) {\n          this.to.focus && this.to.focus(this.field);\n        } else {\n          this.to.blur && this.to.blur(this.field);\n        }\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.required !== this._required && this.checkbox && this.checkbox._inputElement) {\n      this._required = this.required;\n      const inputElement = this.checkbox._inputElement.nativeElement;\n      if (this.required) {\n        this.renderer.setAttribute(inputElement, 'required', 'required');\n      } else {\n        this.renderer.removeAttribute(inputElement, 'required');\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.checkbox) {\n      this.focusMonitor.stopMonitoring(this.checkbox._inputElement);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldCheckbox } from './checkbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'checkbox',\n          component: FormlyFieldCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatCheckboxModule { }\n"]}