{"version":3,"file":"ngx-formly-material-select.js","sources":["@ngx-formly/material/select/select.type.ts","@ngx-formly/material/select/select.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\nimport { FieldType } from '@ngx-formly/material/form-field';\n\n@Component({\n  selector: 'formly-field-mat-select',\n  template: `\n    <ng-template #selectAll let-selectOptions=\"selectOptions\">\n      <mat-option (click)=\"toggleSelectAll(selectOptions)\">\n        <mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\"\n          [state]=\"getSelectAllState(selectOptions)\">\n        </mat-pseudo-checkbox>\n        {{ to.selectAllOption }}\n      </mat-option>\n    </ng-template>\n\n    <mat-select [id]=\"id\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [tabIndex]=\"to.tabindex\"\n      [required]=\"to.required\"\n      [compareWith]=\"to.compareWith\"\n      [multiple]=\"to.multiple\"\n      (selectionChange)=\"change($event)\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [aria-label]=\"_getAriaLabel()\"\n      [aria-labelledby]=\"_getAriaLabelledby()\"\n      [disableOptionCentering]=\"to.disableOptionCentering\"\n      >\n      <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as selectOptions\">\n        <ng-container *ngIf=\"to.multiple && to.selectAllOption\" [ngTemplateOutlet]=\"selectAll\" [ngTemplateOutletContext]=\"{ selectOptions: selectOptions }\">\n        </ng-container>\n        <ng-container *ngFor=\"let item of selectOptions\">\n          <mat-optgroup *ngIf=\"item.group\" [label]=\"item.label\">\n            <mat-option *ngFor=\"let child of item.group\" [value]=\"child.value\" [disabled]=\"child.disabled\">\n              {{ child.label }}\n            </mat-option>\n          </mat-optgroup>\n          <mat-option *ngIf=\"!item.group\" [value]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</mat-option>\n        </ng-container>\n      </ng-container>\n    </mat-select>\n  `,\n})\nexport class FormlyFieldSelect extends FieldType {\n  @ViewChild(MatSelect, <any> { static: true }) formFieldControl!: MatSelect;\n\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      compareWith(o1: any, o2: any) {\n        return o1 === o2;\n      },\n    },\n  };\n\n  private selectAllValue!: { options: any, value: any[] };\n\n  getSelectAllState(options: any[]) {\n    if (this.empty || this.value.length === 0) {\n      return '';\n    }\n\n\n    return this.value.length !== this.getSelectAllValue(options).length\n      ? 'indeterminate'\n      : 'checked';\n  }\n\n  toggleSelectAll(options: any[]) {\n    const selectAllValue = this.getSelectAllValue(options);\n    this.formControl.setValue(\n      !this.value || this.value.length !== selectAllValue.length\n        ? selectAllValue\n        : [],\n    );\n\n    this.formControl.markAsDirty();\n  }\n\n  change($event: MatSelectChange) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n  }\n\n  _getAriaLabelledby() {\n    if (this.to.attributes && this.to.attributes['aria-labelledby']) {\n      return this.to.attributes['aria-labelledby'];\n    }\n\n    if (this.formField && this.formField._labelId) {\n      return this.formField._labelId;\n    }\n\n    return undefined;\n  }\n\n  _getAriaLabel() {\n    return this.to.attributes ? this.to.attributes['aria-label'] : undefined;\n  }\n\n  private getSelectAllValue(options: any[]) {\n    if (!this.selectAllValue || options !== this.selectAllValue.options) {\n      const flatOptions: any[] = [];\n      options.forEach(o => o.group\n        ? flatOptions.push(...o.group)\n        : flatOptions.push(o),\n      );\n\n      this.selectAllValue = {\n        options,\n        value: flatOptions.filter(o => !o.disabled).map(o => o.value),\n      };\n    }\n\n\n    return this.selectAllValue.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { FormlyFieldSelect } from './select.type';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [FormlyFieldSelect],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatPseudoCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'select',\n        component: FormlyFieldSelect,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatSelectModule { }\n"]}