{"version":3,"file":"form-field.wrapper.d.ts","sources":["form-field.wrapper.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OnInit, OnDestroy, Renderer2, AfterViewInit, AfterContentChecked, ElementRef, ViewContainerRef } from '@angular/core';\r\nimport { FieldWrapper, FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\ninterface MatFormlyFieldConfig extends FormlyFieldConfig {\r\n    __formField__: FormlyWrapperFormField;\r\n}\r\nexport declare class FormlyWrapperFormField extends FieldWrapper<MatFormlyFieldConfig> implements OnInit, OnDestroy, MatFormFieldControl<any>, AfterViewInit, AfterContentChecked {\r\n    private config;\r\n    private renderer;\r\n    private elementRef;\r\n    private focusMonitor;\r\n    fieldComponent: ViewContainerRef;\r\n    formField: MatFormField;\r\n    stateChanges: Subject<void>;\r\n    _errorState: boolean;\r\n    private initialGapCalculated;\r\n    constructor(config: FormlyConfig, renderer: Renderer2, elementRef: ElementRef, focusMonitor: FocusMonitor);\r\n    ngOnInit(): void;\r\n    ngAfterContentChecked(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    setDescribedByIds(ids: string[]): void;\r\n    onContainerClick(event: MouseEvent): void;\r\n    readonly errorState: boolean;\r\n    readonly controlType: string | undefined;\r\n    readonly focused: boolean;\r\n    readonly disabled: boolean;\r\n    readonly required: boolean;\r\n    readonly placeholder: string;\r\n    readonly shouldPlaceholderFloat: boolean;\r\n    readonly value: any;\r\n    readonly ngControl: any;\r\n    readonly empty: boolean;\r\n    readonly shouldLabelFloat: boolean;\r\n    readonly formlyField: MatFormlyFieldConfig;\r\n}\r\nexport {};\r\n"]}