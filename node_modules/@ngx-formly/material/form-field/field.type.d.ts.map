{"version":3,"file":"field.type.d.ts","sources":["field.type.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnDestroy, AfterViewInit, TemplateRef } from '@angular/core';\r\nimport { FieldType as CoreFieldType, FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\r\nimport { FormlyErrorStateMatcher } from './formly.error-state-matcher';\r\nexport declare abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> extends CoreFieldType<F> implements OnInit, AfterViewInit, OnDestroy, MatFormFieldControl<any> {\r\n    matPrefix: TemplateRef<any>;\r\n    matSuffix: TemplateRef<any>;\r\n    formFieldControl: MatFormFieldControl<any>;\r\n    errorStateMatcher: FormlyErrorStateMatcher;\r\n    stateChanges: Subject<void>;\r\n    _errorState: boolean;\r\n    private _control;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    setDescribedByIds(ids: string[]): void;\r\n    onContainerClick(event: MouseEvent): void;\r\n    readonly errorState: boolean;\r\n    readonly controlType: string;\r\n    readonly focused: boolean;\r\n    readonly disabled: boolean;\r\n    readonly required: boolean;\r\n    readonly placeholder: string;\r\n    readonly shouldPlaceholderFloat: boolean;\r\n    value: any;\r\n    readonly ngControl: any;\r\n    readonly empty: boolean;\r\n    readonly shouldLabelFloat: boolean;\r\n    readonly formField: MatFormField;\r\n}\r\n"]}