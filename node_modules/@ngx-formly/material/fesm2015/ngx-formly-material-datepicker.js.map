{"version":3,"file":"ngx-formly-material-datepicker.js.map","sources":["ng://@ngx-formly/material/datepicker/datepicker.type.ts","ng://@ngx-formly/material/datepicker/datepicker.module.ts"],"sourcesContent":["import { Component, ViewChild, AfterViewInit, TemplateRef, OnDestroy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatDatepickerInput } from '@angular/material/datepicker';\nimport { FormlyConfig, ÉµwrapProperty as wrapProperty } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-mat-datepicker',\n  template: `\n    <input matInput\n      [id]=\"id\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [matDatepicker]=\"picker\"\n      [matDatepickerFilter]=\"to.datepickerOptions.filter\"\n      [max]=\"to.datepickerOptions.max\"\n      [min]=\"to.datepickerOptions.min\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [tabindex]=\"to.tabindex\"\n      [readonly]=\"to.readonly\"\n      [required]=\"to.required\"\n      (dateInput)=\"to.datepickerOptions.dateInput(field, $event)\"\n      (dateChange)=\"to.datepickerOptions.dateChange(field, $event)\">\n    <ng-template #datepickerToggle>\n      <mat-datepicker-toggle [disabled]=\"to.disabled\" [for]=\"picker\"></mat-datepicker-toggle>\n    </ng-template>\n    <mat-datepicker #picker\n      [color]=\"to.color\"\n      [dateClass]=\"to.datepickerOptions.dateClass\"\n      [disabled]=\"to.datepickerOptions.disabled\"\n      [opened]=\"to.datepickerOptions.opened\"\n      [panelClass]=\"to.datepickerOptions.panelClass\"\n      [startAt]=\"to.datepickerOptions.startAt\"\n      [startView]=\"to.datepickerOptions.startView\"\n      [touchUi]=\"to.datepickerOptions.touchUi\"\n      (monthSelected)=\"to.datepickerOptions.monthSelected(field, $event, picker)\"\n      (yearSelected)=\"to.datepickerOptions.yearSelected(field, $event, picker)\"\n    >\n    </mat-datepicker>\n  `,\n})\nexport class FormlyFieldDatepicker extends FieldType implements AfterViewInit, OnDestroy {\n  @ViewChild(MatInput, <any> { static: true }) formFieldControl!: MatInput;\n  @ViewChild(MatDatepickerInput, <any> { static: true }) datepickerInput!: MatDatepickerInput<any>;\n  @ViewChild('datepickerToggle') datepickerToggle!: TemplateRef<any>;\n\n  defaultOptions = {\n    templateOptions: {\n      datepickerOptions: {\n        startView: 'month',\n        datepickerTogglePosition: 'suffix',\n        dateInput: () => {},\n        dateChange: () => {},\n        monthSelected: () => {},\n        yearSelected: () => {},\n      },\n    },\n  };\n  private fieldErrorsObserver!: Function;\n\n  constructor(private config: FormlyConfig) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    // temporary fix for https://github.com/angular/components/issues/16761\n    if (this.config.getValidatorMessage('matDatepickerParse')) {\n      wrapProperty(this.field.formControl, 'errors', ({ currentValue }) => {\n        if (currentValue && currentValue.required && currentValue.matDatepickerParse) {\n          const errors = Object.keys(currentValue)\n            .sort(prop => prop === 'matDatepickerParse' ? -1 : 0)\n            .reduce((errors, prop) => ({ ...errors, [prop]: currentValue[prop] }), {});\n          (this.field.formControl as any)['___$errors'] = errors;\n        }\n      });\n    }\n\n    // temporary fix for https://github.com/angular/material2/issues/6728\n    (<any> this.datepickerInput)._formField = this.formField;\n\n    setTimeout(() => {\n      switch (this.to.datepickerOptions.datepickerTogglePosition) {\n        case 'suffix':\n          this.to._matSuffix = this.datepickerToggle;\n          break;\n\n        case 'prefix':\n          this.to._matPrefix = this.datepickerToggle;\n          break;\n      }\n\n      (<any> this.options)._markForCheck(this.field);\n    });\n  }\n\n  ngOnDestroy() {\n    this.fieldErrorsObserver && this.fieldErrorsObserver();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport { FormlyFieldDatepicker } from './datepicker.type';\n\n@NgModule({\n  declarations: [FormlyFieldDatepicker],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n\n    FormlyMatFormFieldModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'datepicker',\n        component: FormlyFieldDatepicker,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatDatepickerModule { }\n"],"names":["wrapProperty"],"mappings":";;;;;;;;;;;;AAAA,MA0Ca,qBAAsB,SAAQ,SAAS;;;;IAmBlD,YAAoB,MAAoB;QACtC,KAAK,EAAE,CAAC;QADU,WAAM,GAAN,MAAM,CAAc;QAdxC,mBAAc,GAAG;YACf,eAAe,EAAE;gBACf,iBAAiB,EAAE;oBACjB,SAAS,EAAE,OAAO;oBAClB,wBAAwB,EAAE,QAAQ;oBAClC,SAAS;;;oBAAE,SAAQ,CAAA;oBACnB,UAAU;;;oBAAE,SAAQ,CAAA;oBACpB,aAAa;;;oBAAE,SAAQ,CAAA;oBACvB,YAAY;;;oBAAE,SAAQ,CAAA;iBACvB;aACF;SACF,CAAC;KAKD;;;;IAED,eAAe;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;;QAGxB,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,EAAE;YACzDA,aAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ;;;;YAAE,CAAC,EAAE,YAAY,EAAE;gBAC9D,IAAI,YAAY,IAAI,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,kBAAkB,EAAE;;0BACtE,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;yBACrC,IAAI;;;;oBAAC,IAAI,IAAI,IAAI,KAAK,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAC;yBACpD,MAAM;;;;;oBAAC,CAAC,MAAM,EAAE,IAAI,wBAAW,MAAM,IAAE,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,IAAG,GAAE,EAAE,CAAC;oBAC5E,oBAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAS,YAAY,CAAC,GAAG,MAAM,CAAC;iBACxD;aACF,EAAC,CAAC;SACJ;;QAGD,oBAAO,IAAI,CAAC,eAAe,IAAE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QAEzD,UAAU;;;QAAC;YACT,QAAQ,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,wBAAwB;gBACxD,KAAK,QAAQ;oBACX,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;oBAC3C,MAAM;gBAER,KAAK,QAAQ;oBACX,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;oBAC3C,MAAM;aACT;YAED,oBAAO,IAAI,CAAC,OAAO,IAAE,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChD,EAAC,CAAC;KACJ;;;;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;KACxD;;;YA9FF,SAAS,SAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCT;aACF;;;;YArCQ,YAAY;;;+BAuClB,SAAS,SAAC,QAAQ,qBAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;8BAC1C,SAAS,SAAC,kBAAkB,qBAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;+BACpD,SAAS,SAAC,kBAAkB;;;;;;;AC7C/B,MA6Ba,yBAAyB;;;YAlBrC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE;oBACP,YAAY;oBACZ,mBAAmB;oBACnB,cAAc;oBACd,mBAAmB;oBAEnB,wBAAwB;oBACxB,YAAY,CAAC,QAAQ,CAAC;wBACpB,KAAK,EAAE,CAAC;gCACN,IAAI,EAAE,YAAY;gCAClB,SAAS,EAAE,qBAAqB;gCAChC,QAAQ,EAAE,CAAC,YAAY,CAAC;6BACzB,CAAC;qBACH,CAAC;iBACH;aACF;;;;;;;;;;;;;;;"}
