{"version":3,"file":"ngx-lite-input-tag.umd.js","sources":["../../../projects/ngx-input-tag/src/ngx-input-tag.di-tokens.ts","../../../projects/ngx-input-tag/src/ngx-input-tag.component.ts","../../../projects/ngx-input-tag/src/ngx-input-tag.component.html","../../../projects/ngx-input-tag/src/ngx-input-tag.module.ts","../../../projects/ngx-input-tag/src/public_api.ts","../../../projects/ngx-input-tag/src/ngx-lite-input-tag.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport type TagFormatter = (tag: string) => string;\n\nexport const NGX_INPUT_TAG_TAG_FORMATTER = new InjectionToken<TagFormatter>(\n  'NGX_INPUT_TAG_TAG_FORMATTER'\n);\n","import {\n  forwardRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild,\n  Inject,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  NGX_INPUT_TAG_TAG_FORMATTER,\n  TagFormatter,\n} from './ngx-input-tag.di-tokens';\n\nexport enum KeyCodes {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n  Comma = 188,\n}\n\n@Component({\n  selector: 'ngx-input-tag',\n  templateUrl: './ngx-input-tag.component.html',\n  styleUrls: ['./ngx-input-tag.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxInputTagComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NgxInputTagComponent),\n      multi: true,\n    },\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgxInputTagComponent implements ControlValueAccessor {\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.onChange(val);\n    this.onTouched();\n  }\n\n  @ViewChild('inputElement', { static: false }) inputElement?: ElementRef;\n  @Input() tagSuggestions: string[] = [];\n  @Input() maxTagLength = 25;\n  @Input() maxNumberOfTags = 1000;\n  @Output() readonly textChange = new EventEmitter<string>();\n\n  private _value: string[] = [];\n  private prevTagInput = '';\n  private currentNumberOfTags = 0;\n  private tagError: { message: string } | null = null;\n\n  constructor(\n    @Inject(NGX_INPUT_TAG_TAG_FORMATTER) private tagFormatter: TagFormatter\n  ) {}\n\n  onChange = (_value: string[]) => {};\n\n  onTouched = () => {};\n\n  registerOnChange(fn: (value: string[]) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: string[]) {\n    if (value) {\n      this.value = value.map((v) => this.tagFormatter(v));\n      this.setCurrentNumberOfTags();\n    }\n  }\n\n  validate() {\n    return this.tagError;\n  }\n\n  @HostListener('document:click', ['$event'])\n  handleClick(event: MouseEvent) {\n    if (\n      this.inputElement &&\n      !this.inputElement.nativeElement.contains(event.target) &&\n      this.inputElement.nativeElement.value\n    ) {\n      this.addTag(this.inputElement.nativeElement.value);\n    }\n  }\n\n  addTag(tag: string) {\n    const formattedTag = this.tagFormatter(tag);\n    const tagIsEmpty = formattedTag.length === 0;\n    const invalidTagLength =\n      !formattedTag.length ||\n      (this.maxTagLength && formattedTag.length > this.maxTagLength);\n    const duplicateTag = this.value.indexOf(formattedTag) > -1;\n    const exceedsMaxNumberOfTags =\n      this.currentNumberOfTags > this.maxNumberOfTags;\n\n    if (!tagIsEmpty && invalidTagLength) {\n      this.tagError = {\n        message: `Tag length cannot exceed ${this.maxTagLength} characters`,\n      };\n    }\n\n    if (duplicateTag) {\n      this.tagError = { message: 'Cannot add duplicate tag' };\n    }\n\n    if (exceedsMaxNumberOfTags) {\n      const plural = this.maxNumberOfTags === 1 ? '' : 's';\n      this.tagError = {\n        message: `Cannot exceed ${this.maxNumberOfTags} tag${plural}`,\n      };\n    }\n\n    if (\n      !tagIsEmpty &&\n      !invalidTagLength &&\n      !duplicateTag &&\n      !exceedsMaxNumberOfTags &&\n      this.inputElement\n    ) {\n      this.tagError = null;\n      this.value.push(formattedTag);\n      this.setCurrentNumberOfTags();\n      this.inputElement.nativeElement.value = '';\n    }\n\n    this.value = this.value;\n    this.focus();\n  }\n\n  addTagEvent(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n\n    this.tagError = null;\n    this.value = this.value;\n\n    this.textChange.emit(input.value);\n    if (\n      event.keyCode === KeyCodes.Backspace &&\n      this.prevTagInput.length === 0\n    ) {\n      this._value.pop();\n      this.setCurrentNumberOfTags();\n    } else if (\n      event.keyCode === KeyCodes.Enter ||\n      event.keyCode === KeyCodes.Comma ||\n      event.keyCode === KeyCodes.Tab\n    ) {\n      this.addTag(input.value);\n    }\n\n    this.prevTagInput = input.value;\n  }\n\n  preventDefaultTabBehavior(event: KeyboardEvent) {\n    if (event.keyCode === KeyCodes.Tab && this.prevTagInput.length > 0) {\n      event.preventDefault();\n    }\n  }\n\n  addTagClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    if (value.length > 0) {\n      this.addTag(value);\n    }\n  }\n\n  addSuggestedTag(tag: string) {\n    this.addTag(tag);\n  }\n\n  removeTag(tag: string, event: any) {\n    if (event.keyCode !== KeyCodes.Enter) {\n      this.value = this._value.filter((t) => t !== tag);\n      this.setCurrentNumberOfTags();\n    }\n  }\n\n  focus() {\n    this.inputElement?.nativeElement.focus();\n  }\n\n  setCurrentNumberOfTags() {\n    this.currentNumberOfTags = this.value.length\n      ? this.value.toString().split(',').length\n      : 0;\n  }\n}\n\nexport function formatter(tag: string): string {\n  return tag\n    .trim()\n    .replace(/(\\s|-)+/g, '-')\n    .replace(/\\,/g, '')\n    .toLowerCase();\n}\n","<div (click)=\"focus()\" class=\"ngx-input-tag\">\n  <div *ngFor=\"let tag of value\" class=\"ngx-input-tag__tag\">\n    {{tag}}\n    <button type=\"button\" (click)=\"removeTag(tag, $event)\">\n      &#10006;\n    </button>\n  </div>\n  <input type=\"text\" #inputElement aria-label=\"Tags\" [style.width]=\"inputElement.value.length * 10 + 10 + 'px'\" (keyup)=\"addTagEvent($event)\" (keydown)=\"preventDefaultTabBehavior($event)\"\n    class=\"ngx-input-tag__input\" />\n  <button type=\"button\" aria-label=\"Add Tag\" title=\"Add Tag\" (click)=\"addTagClick($event, inputElement.value)\" class=\"ngx-input-tag__btn\">\n    +\n  </button>\n</div>\n\n<div *ngIf=\"inputElement.value.length && tagSuggestions && tagSuggestions.length\" class=\"ngx-input-tag-suggestions\">\n  <button type=\"button\" (click)=\"addSuggestedTag(tag)\" *ngFor=\"let tag of tagSuggestions\" class=\"ngx-input-tag-suggestions__tag\">{{tag}}</button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  NgxInputTagComponent,\n  formatter as tagFormatter,\n} from './ngx-input-tag.component';\nimport { NGX_INPUT_TAG_TAG_FORMATTER } from './ngx-input-tag.di-tokens';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxInputTagComponent],\n  exports: [NgxInputTagComponent],\n})\nexport class NgxInputTagModule {\n  static forRoot(config = { tagFormatter }) {\n    return {\n      ngModule: NgxInputTagModule,\n      providers: [\n        {\n          provide: NGX_INPUT_TAG_TAG_FORMATTER,\n          useValue: config.tagFormatter,\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-input-tag\n */\n\nexport * from './ngx-input-tag.component';\nexport * from './ngx-input-tag.di-tokens';\nexport * from './ngx-input-tag.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["InjectionToken","KeyCodes","EventEmitter","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ViewChild","Input","Output","HostListener","CommonModule","NgModule"],"mappings":"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"}