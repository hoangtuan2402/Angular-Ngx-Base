{"version":3,"file":"ngx-lite-in-viewport.js","sources":["../../../projects/ngx-in-viewport/src/ngx-in-viewport.directive.ts","../../../projects/ngx-in-viewport/src/ngx-in-viewport.module.ts","../../../projects/ngx-in-viewport/src/public_api.ts","../../../projects/ngx-in-viewport/src/ngx-lite-in-viewport.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, merge } from 'rxjs/operators';\n\nexport interface InViewportEvent {\n  target: HTMLElement;\n  value: boolean;\n}\n\n@Directive({\n  selector: '[ngxInViewport]',\n})\nexport class NgxInViewportDirective implements OnInit, OnDestroy {\n  @Input() offset = 0;\n  @Output() readonly inViewport = new EventEmitter<InViewportEvent>();\n  private subscription?: Subscription;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private readonly elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.subscription = fromEvent(window, 'scroll')\n        .pipe(merge(fromEvent(window, 'resize')), debounceTime(100))\n        .subscribe(() => this.check());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private check() {\n    const event: InViewportEvent = {\n      target: this.elementRef.nativeElement,\n      value:\n        document.body.contains(this.elementRef.nativeElement) &&\n        this.elementRef.nativeElement.getBoundingClientRect().top <=\n          window.innerHeight + this.offset,\n    };\n\n    this.inViewport.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxInViewportDirective } from './ngx-in-viewport.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxInViewportDirective],\n  exports: [NgxInViewportDirective],\n})\nexport class NgxInViewportModule {}\n","/*\n * Public API Surface of ngx-in-viewport\n */\n\nexport * from './ngx-in-viewport.directive';\nexport * from './ngx-in-viewport.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;MAuBa,sBAAsB;IAKjC,YAC+B,UAAe,EAC3B,UAAsB;QADV,eAAU,GAAV,UAAU,CAAK;QAC3B,eAAU,GAAV,UAAU,CAAY;QANhC,WAAM,GAAG,CAAC,CAAC;QACD,eAAU,GAAG,IAAI,YAAY,EAAmB,CAAC;KAMhE;IAEJ,QAAQ;QACN,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;iBAC5C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC;iBAC3D,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAClC;KACF;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;IAEO,KAAK;QACX,MAAM,KAAK,GAAoB;YAC7B,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;YACrC,KAAK,EACH,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;gBACrD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,GAAG;oBACvD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM;SACrC,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;;mHAlCU,sBAAsB,kBAMvB,WAAW;uGANV,sBAAsB;2FAAtB,sBAAsB;kBAHlC,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;iBAC5B;;0BAOI,MAAM;2BAAC,WAAW;qEALZ,MAAM;sBAAd,KAAK;gBACa,UAAU;sBAA5B,MAAM;;;MChBI,mBAAmB;;gHAAnB,mBAAmB;iHAAnB,mBAAmB,iBAHf,sBAAsB,aAD3B,YAAY,aAEZ,sBAAsB;iHAErB,mBAAmB,YAJrB,CAAC,YAAY,CAAC;2FAIZ,mBAAmB;kBAL/B,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC;;;ACRD;;;;ACAA;;;;;;"}