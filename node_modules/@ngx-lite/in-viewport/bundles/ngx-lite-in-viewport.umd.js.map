{"version":3,"file":"ngx-lite-in-viewport.umd.js","sources":["../../../projects/ngx-in-viewport/src/ngx-in-viewport.directive.ts","../../../projects/ngx-in-viewport/src/ngx-in-viewport.module.ts","../../../projects/ngx-in-viewport/src/public_api.ts","../../../projects/ngx-in-viewport/src/ngx-lite-in-viewport.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, merge } from 'rxjs/operators';\n\nexport interface InViewportEvent {\n  target: HTMLElement;\n  value: boolean;\n}\n\n@Directive({\n  selector: '[ngxInViewport]',\n})\nexport class NgxInViewportDirective implements OnInit, OnDestroy {\n  @Input() offset = 0;\n  @Output() readonly inViewport = new EventEmitter<InViewportEvent>();\n  private subscription?: Subscription;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private readonly elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.subscription = fromEvent(window, 'scroll')\n        .pipe(merge(fromEvent(window, 'resize')), debounceTime(100))\n        .subscribe(() => this.check());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private check() {\n    const event: InViewportEvent = {\n      target: this.elementRef.nativeElement,\n      value:\n        document.body.contains(this.elementRef.nativeElement) &&\n        this.elementRef.nativeElement.getBoundingClientRect().top <=\n          window.innerHeight + this.offset,\n    };\n\n    this.inViewport.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxInViewportDirective } from './ngx-in-viewport.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxInViewportDirective],\n  exports: [NgxInViewportDirective],\n})\nexport class NgxInViewportModule {}\n","/*\n * Public API Surface of ngx-in-viewport\n */\n\nexport * from './ngx-in-viewport.directive';\nexport * from './ngx-in-viewport.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","isPlatformBrowser","fromEvent","merge","debounceTime","PLATFORM_ID","Directive","Inject","Input","Output","CommonModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4BE,gCAC+B,UAAe,EAC3B,UAAsB;YADV,eAAU,GAAV,UAAU,CAAK;YAC3B,eAAU,GAAV,UAAU,CAAY;YANhC,WAAM,GAAG,CAAC,CAAC;YACD,eAAU,GAAG,IAAIA,eAAY,EAAmB,CAAC;SAMhE;QAEJ,yCAAQ,GAAR;YAAA,iBAMC;YALC,IAAIC,wBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACtC,IAAI,CAAC,YAAY,GAAGC,cAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;qBAC5C,IAAI,CAACC,eAAK,CAACD,cAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,EAAEE,sBAAY,CAAC,GAAG,CAAC,CAAC;qBAC3D,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;aAClC;SACF;QAED,4CAAW,GAAX;YACE,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;aACjC;SACF;QAEO,sCAAK,GAAL;YACN,IAAM,KAAK,GAAoB;gBAC7B,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;gBACrC,KAAK,EACH,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;oBACrD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,GAAG;wBACvD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM;aACrC,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;;;6IAlCU,sBAAsB,kBAMvBC,cAAW;sHANV,sBAAsB;qHAAtB,sBAAsB;sBAHlCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,iBAAiB;qBAC5B;;;kCAOIC,SAAM;mCAACF,cAAW;;6BALZ,MAAM;0BAAdG,QAAK;oBACa,UAAU;0BAA5BC,SAAM;;;;QChBT;;;;0IAAa,mBAAmB;2IAAnB,mBAAmB,iBAHf,sBAAsB,aAD3BC,mBAAY,aAEZ,sBAAsB;2IAErB,mBAAmB,YAJrB,CAACA,mBAAY,CAAC;qHAIZ,mBAAmB;sBAL/BC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,mBAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,sBAAsB,CAAC;wBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;qBAClC;;;ICRD;;;;ICAA;;;;;;;;;;;;;"}