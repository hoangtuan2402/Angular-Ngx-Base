{"version":3,"sources":["ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/common/utils.ts","node_modules/tslib/tslib.es6.js","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/common/immutable-state-context.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/decorators/immutable-context.decorator.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/decorators/immutable-selector.decorator.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/obsolete/produce.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/obsolete/mutation.decorator.ts"],"names":["isValidContext","ctx","isDefined","target","undefined","getState","setState","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","ImmutableStateContext","this","frozenState","autobindStateContext","context","_b","__values","tslib_1.__values","Object","getOwnPropertyNames","getPrototypeOf","_c","prop","bind","prototype","createDraft","val","state","newState","oldState","mutatedOldState","finishDraft","patchState","dispatch","actions","ImmutableContext","_target","_key","descriptor","method","action","args","_i","apply","ImmutableSelector","produce","recipe","Error","immerProduce","Mutation"],"mappings":"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","sourcesContent":["import { StateContext } from '@ngxs/store';\n\n/**\n * An utility function, that determines if provided target is defined and not nullable\n *\n * @param target - Value to check for being `undefined` or `null`\n * @returns - True if the passed target is not `undefined` and not `null`\n */\nfunction isDefined<T = unknown>(target: T): boolean {\n  return target !== undefined && target !== null;\n}\n\n/**\n * An utility function, that determines if provided object is valid\n *\n * @param ctx - `StateContext` plain object\n * @returns - True if provided object is valid and has necessary methods\n */\nexport function isValidContext<T = unknown>(ctx: StateContext<T>): boolean {\n  return isDefined(ctx) && typeof ctx.getState === 'function' && typeof ctx.setState === 'function';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { StateContext, StateOperator } from '@ngxs/store';\nimport { createDraft, finishDraft } from 'immer';\nimport { Observable } from 'rxjs';\n\nexport class ImmutableStateContext<T extends any> implements StateContext<T> {\n  private frozenState: T | null = null;\n\n  constructor(private ctx: StateContext<T>) {\n    ImmutableStateContext.autobindStateContext(this);\n  }\n\n  private static autobindStateContext(context: any): void {\n    for (const prop of Object.getOwnPropertyNames(Object.getPrototypeOf(context))) {\n      if (prop === 'constructor' || typeof context[prop] !== 'function') {\n        continue;\n      }\n\n      context[prop] = context[prop].bind(context);\n    }\n  }\n\n  public getState(): T {\n    this.frozenState = createDraft(this.ctx.getState()) as T;\n    return this.frozenState;\n  }\n\n  public setState(val: T | StateOperator<T>): T {\n    let state: T;\n\n    if (typeof val === 'function') {\n      let newState: T;\n      const oldState: T = createDraft(this.ctx.getState()) as T;\n      const operator: StateOperator<T> = val as StateOperator<T>;\n      const mutatedOldState: T = operator(oldState);\n\n      if (this.frozenState === mutatedOldState) {\n        newState = finishDraft(this.frozenState);\n        finishDraft(oldState);\n      } else {\n        const mutateOutsideOperator: boolean = oldState !== mutatedOldState;\n        if (mutateOutsideOperator) {\n          newState = mutatedOldState;\n          finishDraft(oldState);\n        } else {\n          newState = finishDraft(mutatedOldState);\n        }\n      }\n\n      state = newState;\n    } else {\n      state = finishDraft(val);\n    }\n\n    this.frozenState = null;\n    return this.ctx.setState(state);\n  }\n\n  public patchState(val: Partial<T>): T {\n    return this.ctx.patchState(finishDraft(val) as Partial<T>);\n  }\n\n  public dispatch(actions: any | any[]): Observable<void> {\n    return this.ctx.dispatch(actions);\n  }\n}\n","import { StateContext } from '@ngxs/store';\n\nimport { ImmutableStateContext } from '../common/immutable-state-context';\n\nexport function ImmutableContext(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(ctx: StateContext<any>, action: any, ...args: any[]) {\n      return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","import { createDraft } from 'immer';\n\nexport function ImmutableSelector(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(state: any, ...args: any[]) {\n      return method.apply(this, [createDraft(state), ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","import { Draft, produce as immerProduce } from 'immer';\nimport { StateContext, StateOperator } from '@ngxs/store';\nimport { isValidContext } from '../common/utils';\n\n\n/**\n * An adapter function for the `produce` from `immer` library\n *\n * @param ctx - Reference to the `StateContext` plain object\n * @param recipe - Function that receives a proxy of the current state\n * @deprecated - use immutable helpers from ngxs v3.4.x\n * @returns - New state or throws an error\n */\nexport function produce<T = any>(ctx: StateContext<T>, recipe: (draft: Draft<T>) => void | T): never | T {\n  const invalidContext = !isValidContext<T>(ctx);\n\n  if (invalidContext) {\n    throw new Error('You should provide `StateContext` object as the first argument of the `produce` function');\n  }\n\n  return ctx.setState(((state: T) => immerProduce(state, recipe)) as StateOperator<T>);\n}\n","import { StateContext } from '@ngxs/store';\nimport { ImmutableStateContext } from '../common/immutable-state-context';\n\n/**\n * @deprecated - use ImmutableContext instead Mutation\n */\nexport function Mutation(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(ctx: StateContext<any>, action: any, ...args: any[]) {\n      return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n    };\n\n    return descriptor;\n  };\n}\n"]}