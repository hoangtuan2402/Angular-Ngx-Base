/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { produce as immerProduce } from 'immer';
import { isValidContext } from '../common/utils';
/**
 * An adapter function for the `produce` from `immer` library
 *
 * @deprecated - use immutable helpers from ngxs v3.4.x
 * @template T
 * @param {?} ctx - Reference to the `StateContext` plain object
 * @param {?} recipe - Function that receives a proxy of the current state
 * @return {?} - New state or throws an error
 */
export function produce(ctx, recipe) {
    /** @type {?} */
    const invalidContext = !isValidContext(ctx);
    if (invalidContext) {
        throw new Error('You should provide `StateContext` object as the first argument of the `produce` function');
    }
    return ctx.setState((/** @type {?} */ (((/**
     * @param {?} state
     * @return {?}
     */
    (state) => immerProduce(state, recipe))))));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzLWxhYnMvaW1tZXItYWRhcHRlci8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2ltbWVyLWFkYXB0ZXIvb2Jzb2xldGUvcHJvZHVjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFTLE9BQU8sSUFBSSxZQUFZLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFFdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7O0FBV2pELE1BQU0sVUFBVSxPQUFPLENBQVUsR0FBb0IsRUFBRSxNQUFxQzs7VUFDcEYsY0FBYyxHQUFHLENBQUMsY0FBYyxDQUFJLEdBQUcsQ0FBQztJQUU5QyxJQUFJLGNBQWMsRUFBRTtRQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLDBGQUEwRixDQUFDLENBQUM7S0FDN0c7SUFFRCxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQUE7Ozs7SUFBQyxDQUFDLEtBQVEsRUFBRSxFQUFFLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsRUFBQyxFQUFvQixDQUFDLENBQUM7QUFDdkYsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERyYWZ0LCBwcm9kdWNlIGFzIGltbWVyUHJvZHVjZSB9IGZyb20gJ2ltbWVyJztcbmltcG9ydCB7IFN0YXRlQ29udGV4dCwgU3RhdGVPcGVyYXRvciB9IGZyb20gJ0BuZ3hzL3N0b3JlJztcbmltcG9ydCB7IGlzVmFsaWRDb250ZXh0IH0gZnJvbSAnLi4vY29tbW9uL3V0aWxzJztcblxuXG4vKipcbiAqIEFuIGFkYXB0ZXIgZnVuY3Rpb24gZm9yIHRoZSBgcHJvZHVjZWAgZnJvbSBgaW1tZXJgIGxpYnJhcnlcbiAqXG4gKiBAcGFyYW0gY3R4IC0gUmVmZXJlbmNlIHRvIHRoZSBgU3RhdGVDb250ZXh0YCBwbGFpbiBvYmplY3RcbiAqIEBwYXJhbSByZWNpcGUgLSBGdW5jdGlvbiB0aGF0IHJlY2VpdmVzIGEgcHJveHkgb2YgdGhlIGN1cnJlbnQgc3RhdGVcbiAqIEBkZXByZWNhdGVkIC0gdXNlIGltbXV0YWJsZSBoZWxwZXJzIGZyb20gbmd4cyB2My40LnhcbiAqIEByZXR1cm5zIC0gTmV3IHN0YXRlIG9yIHRocm93cyBhbiBlcnJvclxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvZHVjZTxUID0gYW55PihjdHg6IFN0YXRlQ29udGV4dDxUPiwgcmVjaXBlOiAoZHJhZnQ6IERyYWZ0PFQ+KSA9PiB2b2lkIHwgVCk6IG5ldmVyIHwgVCB7XG4gIGNvbnN0IGludmFsaWRDb250ZXh0ID0gIWlzVmFsaWRDb250ZXh0PFQ+KGN0eCk7XG5cbiAgaWYgKGludmFsaWRDb250ZXh0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdZb3Ugc2hvdWxkIHByb3ZpZGUgYFN0YXRlQ29udGV4dGAgb2JqZWN0IGFzIHRoZSBmaXJzdCBhcmd1bWVudCBvZiB0aGUgYHByb2R1Y2VgIGZ1bmN0aW9uJyk7XG4gIH1cblxuICByZXR1cm4gY3R4LnNldFN0YXRlKCgoc3RhdGU6IFQpID0+IGltbWVyUHJvZHVjZShzdGF0ZSwgcmVjaXBlKSkgYXMgU3RhdGVPcGVyYXRvcjxUPik7XG59XG4iXX0=