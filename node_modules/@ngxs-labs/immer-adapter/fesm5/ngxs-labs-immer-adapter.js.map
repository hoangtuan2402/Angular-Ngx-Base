{"version":3,"file":"ngxs-labs-immer-adapter.js.map","sources":["ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/common/utils.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/obsolete/produce.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/common/immutable-state-context.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/obsolete/mutation.decorator.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/decorators/immutable-context.decorator.ts","ng://@ngxs-labs/immer-adapter/lib/core/immer-adapter/decorators/immutable-selector.decorator.ts"],"sourcesContent":["import { StateContext } from '@ngxs/store';\n\n/**\n * An utility function, that determines if provided target is defined and not nullable\n *\n * @param target - Value to check for being `undefined` or `null`\n * @returns - True if the passed target is not `undefined` and not `null`\n */\nfunction isDefined<T = unknown>(target: T): boolean {\n  return target !== undefined && target !== null;\n}\n\n/**\n * An utility function, that determines if provided object is valid\n *\n * @param ctx - `StateContext` plain object\n * @returns - True if provided object is valid and has necessary methods\n */\nexport function isValidContext<T = unknown>(ctx: StateContext<T>): boolean {\n  return isDefined(ctx) && typeof ctx.getState === 'function' && typeof ctx.setState === 'function';\n}\n","import { Draft, produce as immerProduce } from 'immer';\nimport { StateContext, StateOperator } from '@ngxs/store';\nimport { isValidContext } from '../common/utils';\n\n\n/**\n * An adapter function for the `produce` from `immer` library\n *\n * @param ctx - Reference to the `StateContext` plain object\n * @param recipe - Function that receives a proxy of the current state\n * @deprecated - use immutable helpers from ngxs v3.4.x\n * @returns - New state or throws an error\n */\nexport function produce<T = any>(ctx: StateContext<T>, recipe: (draft: Draft<T>) => void | T): never | T {\n  const invalidContext = !isValidContext<T>(ctx);\n\n  if (invalidContext) {\n    throw new Error('You should provide `StateContext` object as the first argument of the `produce` function');\n  }\n\n  return ctx.setState(((state: T) => immerProduce(state, recipe)) as StateOperator<T>);\n}\n","import { StateContext, StateOperator } from '@ngxs/store';\nimport { createDraft, finishDraft } from 'immer';\nimport { Observable } from 'rxjs';\n\nexport class ImmutableStateContext<T extends any> implements StateContext<T> {\n  private frozenState: T | null = null;\n\n  constructor(private ctx: StateContext<T>) {\n    ImmutableStateContext.autobindStateContext(this);\n  }\n\n  private static autobindStateContext(context: any): void {\n    for (const prop of Object.getOwnPropertyNames(Object.getPrototypeOf(context))) {\n      if (prop === 'constructor' || typeof context[prop] !== 'function') {\n        continue;\n      }\n\n      context[prop] = context[prop].bind(context);\n    }\n  }\n\n  public getState(): T {\n    this.frozenState = createDraft(this.ctx.getState()) as T;\n    return this.frozenState;\n  }\n\n  public setState(val: T | StateOperator<T>): T {\n    let state: T;\n\n    if (typeof val === 'function') {\n      let newState: T;\n      const oldState: T = createDraft(this.ctx.getState()) as T;\n      const operator: StateOperator<T> = val as StateOperator<T>;\n      const mutatedOldState: T = operator(oldState);\n\n      if (this.frozenState === mutatedOldState) {\n        newState = finishDraft(this.frozenState);\n        finishDraft(oldState);\n      } else {\n        const mutateOutsideOperator: boolean = oldState !== mutatedOldState;\n        if (mutateOutsideOperator) {\n          newState = mutatedOldState;\n          finishDraft(oldState);\n        } else {\n          newState = finishDraft(mutatedOldState);\n        }\n      }\n\n      state = newState;\n    } else {\n      state = finishDraft(val);\n    }\n\n    this.frozenState = null;\n    return this.ctx.setState(state);\n  }\n\n  public patchState(val: Partial<T>): T {\n    return this.ctx.patchState(finishDraft(val) as Partial<T>);\n  }\n\n  public dispatch(actions: any | any[]): Observable<void> {\n    return this.ctx.dispatch(actions);\n  }\n}\n","import { StateContext } from '@ngxs/store';\nimport { ImmutableStateContext } from '../common/immutable-state-context';\n\n/**\n * @deprecated - use ImmutableContext instead Mutation\n */\nexport function Mutation(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(ctx: StateContext<any>, action: any, ...args: any[]) {\n      return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","import { StateContext } from '@ngxs/store';\n\nimport { ImmutableStateContext } from '../common/immutable-state-context';\n\nexport function ImmutableContext(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(ctx: StateContext<any>, action: any, ...args: any[]) {\n      return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n    };\n\n    return descriptor;\n  };\n}\n","import { createDraft } from 'immer';\n\nexport function ImmutableSelector(): Function {\n  return function(_target: Object, _key: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n    const method = descriptor.value;\n\n    descriptor.value = function(state: any, ...args: any[]) {\n      return method.apply(this, [createDraft(state), ...args]);\n    };\n\n    return descriptor;\n  };\n}\n"],"names":["produce","immerProduce","tslib_1.__values"],"mappings":"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"}
