/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/// <reference types="jest" />
/// <reference types="jest" />
/**
 * @template T
 * @param {?} fn
 * @return {?}
 */
export function skipConsoleLogging(fn) {
    /** @type {?} */
    var consoleSpies = [
        jest.spyOn(console, 'log').mockImplementation((/**
         * @return {?}
         */
        function () { })),
        jest.spyOn(console, 'warn').mockImplementation((/**
         * @return {?}
         */
        function () { })),
        jest.spyOn(console, 'error').mockImplementation((/**
         * @return {?}
         */
        function () { })),
        jest.spyOn(console, 'info').mockImplementation((/**
         * @return {?}
         */
        function () { }))
    ];
    /**
     * @return {?}
     */
    function restoreSpies() {
        consoleSpies.forEach((/**
         * @param {?} spy
         * @return {?}
         */
        function (spy) { return spy.mockRestore(); }));
    }
    /** @type {?} */
    var restoreSpyAsync = false;
    try {
        /** @type {?} */
        var returnValue = fn();
        if (returnValue instanceof Promise) {
            restoreSpyAsync = true;
            return (/** @type {?} */ (returnValue.finally((/**
             * @return {?}
             */
            function () { return restoreSpies(); }))));
        }
        return returnValue;
    }
    finally {
        if (!restoreSpyAsync) {
            restoreSpies();
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tpcC1jb25zb2xlLWxvZ2dpbmcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4cy9zdG9yZS9pbnRlcm5hbHMvdGVzdGluZy8iLCJzb3VyY2VzIjpbInNraXAtY29uc29sZS1sb2dnaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSw4QkFBOEI7Ozs7Ozs7QUFFOUIsTUFBTSxVQUFVLGtCQUFrQixDQUFvQyxFQUFLOztRQUNuRSxZQUFZLEdBQUc7UUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsa0JBQWtCOzs7UUFBQyxjQUFPLENBQUMsRUFBQztRQUN2RCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxrQkFBa0I7OztRQUFDLGNBQU8sQ0FBQyxFQUFDO1FBQ3hELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLGtCQUFrQjs7O1FBQUMsY0FBTyxDQUFDLEVBQUM7UUFDekQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUMsa0JBQWtCOzs7UUFBQyxjQUFPLENBQUMsRUFBQztLQUN6RDs7OztJQUNELFNBQVMsWUFBWTtRQUNuQixZQUFZLENBQUMsT0FBTzs7OztRQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsR0FBRyxDQUFDLFdBQVcsRUFBRSxFQUFqQixDQUFpQixFQUFDLENBQUM7SUFDakQsQ0FBQzs7UUFDRyxlQUFlLEdBQUcsS0FBSztJQUMzQixJQUFJOztZQUNJLFdBQVcsR0FBRyxFQUFFLEVBQUU7UUFDeEIsSUFBSSxXQUFXLFlBQVksT0FBTyxFQUFFO1lBQ2xDLGVBQWUsR0FBRyxJQUFJLENBQUM7WUFDdkIsT0FBTyxtQkFBQSxXQUFXLENBQUMsT0FBTzs7O1lBQUMsY0FBTSxPQUFBLFlBQVksRUFBRSxFQUFkLENBQWMsRUFBQyxFQUFpQixDQUFDO1NBQ25FO1FBQ0QsT0FBTyxXQUFXLENBQUM7S0FDcEI7WUFBUztRQUNSLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDcEIsWUFBWSxFQUFFLENBQUM7U0FDaEI7S0FDRjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSB0eXBlcz1cImplc3RcIiAvPlxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNraXBDb25zb2xlTG9nZ2luZzxUIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBhbnk+KGZuOiBUKTogUmV0dXJuVHlwZTxUPiB7XHJcbiAgY29uc3QgY29uc29sZVNwaWVzID0gW1xyXG4gICAgamVzdC5zcHlPbihjb25zb2xlLCAnbG9nJykubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+IHt9KSxcclxuICAgIGplc3Quc3B5T24oY29uc29sZSwgJ3dhcm4nKS5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4ge30pLFxyXG4gICAgamVzdC5zcHlPbihjb25zb2xlLCAnZXJyb3InKS5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4ge30pLFxyXG4gICAgamVzdC5zcHlPbihjb25zb2xlLCAnaW5mbycpLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiB7fSlcclxuICBdO1xyXG4gIGZ1bmN0aW9uIHJlc3RvcmVTcGllcygpIHtcclxuICAgIGNvbnNvbGVTcGllcy5mb3JFYWNoKHNweSA9PiBzcHkubW9ja1Jlc3RvcmUoKSk7XHJcbiAgfVxyXG4gIGxldCByZXN0b3JlU3B5QXN5bmMgPSBmYWxzZTtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmV0dXJuVmFsdWUgPSBmbigpO1xyXG4gICAgaWYgKHJldHVyblZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xyXG4gICAgICByZXN0b3JlU3B5QXN5bmMgPSB0cnVlO1xyXG4gICAgICByZXR1cm4gcmV0dXJuVmFsdWUuZmluYWxseSgoKSA9PiByZXN0b3JlU3BpZXMoKSkgYXMgUmV0dXJuVHlwZTxUPjtcclxuICAgIH1cclxuICAgIHJldHVybiByZXR1cm5WYWx1ZTtcclxuICB9IGZpbmFsbHkge1xyXG4gICAgaWYgKCFyZXN0b3JlU3B5QXN5bmMpIHtcclxuICAgICAgcmVzdG9yZVNwaWVzKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==